/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TSafe7579Launchpad,
  TSafe7579LaunchpadInterface,
} from "../../../../manual/safe/Safe7579Launchpad.sol/TSafe7579Launchpad";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "entryPoint",
        type: "address",
        internalType: "address",
      },
      {
        name: "registry",
        type: "address",
        internalType: "contract IERC7484",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "REGISTRY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC7484",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SUPPORTED_ENTRYPOINT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accountId",
    inputs: [],
    outputs: [
      {
        name: "accountImplementationId",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "addSafe7579",
    inputs: [
      {
        name: "safe7579",
        type: "address",
        internalType: "address",
      },
      {
        name: "validators",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "executors",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "fallbacks",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "hooks",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "attesters",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "threshold",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "domainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getInitHash",
    inputs: [],
    outputs: [
      {
        name: "value",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSafeOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "entryPoint",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "operationData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "validAfter",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "validUntil",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "signatures",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hash",
    inputs: [
      {
        name: "data",
        type: "tuple",
        internalType: "struct Safe7579Launchpad.InitData",
        components: [
          {
            name: "singleton",
            type: "address",
            internalType: "address",
          },
          {
            name: "owners",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "threshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "setupTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "setupData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "safe7579",
            type: "address",
            internalType: "contract ISafe7579",
          },
          {
            name: "validators",
            type: "tuple[]",
            internalType: "struct ModuleInit[]",
            components: [
              {
                name: "module",
                type: "address",
                internalType: "address",
              },
              {
                name: "initData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "initSafe7579",
    inputs: [
      {
        name: "safe7579",
        type: "address",
        internalType: "address",
      },
      {
        name: "executors",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "fallbacks",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "hooks",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "attesters",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "threshold",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "preValidationSetup",
    inputs: [
      {
        name: "initHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "preInit",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "predictSafeAddress",
    inputs: [
      {
        name: "singleton",
        type: "address",
        internalType: "address",
      },
      {
        name: "safeProxyFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "creationCode",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "factoryInitializer",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "safeProxy",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "setupSafe",
    inputs: [
      {
        name: "initData",
        type: "tuple",
        internalType: "struct Safe7579Launchpad.InitData",
        components: [
          {
            name: "singleton",
            type: "address",
            internalType: "address",
          },
          {
            name: "owners",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "threshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "setupTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "setupData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "safe7579",
            type: "address",
            internalType: "contract ISafe7579",
          },
          {
            name: "validators",
            type: "tuple[]",
            internalType: "struct ModuleInit[]",
            components: [
              {
                name: "module",
                type: "address",
                internalType: "address",
              },
              {
                name: "initData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsExecutionMode",
    inputs: [
      {
        name: "encodedMode",
        type: "bytes32",
        internalType: "ModeCode",
      },
    ],
    outputs: [
      {
        name: "supported",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "supportsModule",
    inputs: [
      {
        name: "moduleTypeId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "userOpHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "validationData",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ModuleInstalled",
    inputs: [
      {
        name: "moduleTypeId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "module",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ModuleUninstalled",
    inputs: [
      {
        name: "moduleTypeId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "module",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidEntryPoint",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitHash",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSetup",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidUserOperationData",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyDelegatecall",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyProxy",
    inputs: [],
  },
  {
    type: "error",
    name: "PreValidationSetupFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "Safe7579LaunchpadAlreadyInitialized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f5ffd5b50604051612c2f380380612c2f83398101604081905261002e91610087565b6001600160a01b03821661005557604051632039d3c960e01b815260040160405180910390fd5b306080526001600160a01b0391821660a0521660c0526100bf565b6001600160a01b0381168114610084575f5ffd5b50565b5f5f60408385031215610098575f5ffd5b82516100a381610070565b60208401519092506100b481610070565b809150509250929050565b60805160a05160c051612b0f6101205f395f8181610151015281816104720152610f7001525f81816101a1015281816105990152818161104b015261137901525f818160f0015281816105440152818161095501526110b30152612b0f5ff3fe6080604052600436106100e7575f3560e01c8063663c87d811610087578063d78343d911610057578063d78343d914610335578063d9ed0e8f14610354578063f2dc691d14610373578063f698da2514610392575f5ffd5b8063663c87d81461027d578063928107f91461029c5780639cfd7cff146102bb578063d03c791414610306575f5ffd5b806319822f7c116100c257806319822f7c146101e25780633c9de1b81461020f5780634fff40e11461022f57806355d559f41461024e575f5ffd5b806306433b1b14610140578063137e051e1461019057806315cca638146101c3575f5ffd5b3661013c575f547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461013a576040516308e3edd160e41b815260040160405180910390fd5b005b5f5ffd5b34801561014b575f5ffd5b506101737f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019b575f5ffd5b506101737f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ce575f5ffd5b5061013a6101dd3660046119a5565b6103a6565b3480156101ed575f5ffd5b506102016101fc366004611aa6565b61053f565b604051908152602001610187565b34801561021a575f5ffd5b505f516020612aba5f395f51905f5254610201565b34801561023a575f5ffd5b5061013a610249366004611aef565b610951565b348015610259575f5ffd5b5061026d610268366004611b72565b610a79565b6040516101879493929190611bee565b348015610288575f5ffd5b50610173610297366004611d40565b610cd3565b3480156102a7575f5ffd5b506102016102b6366004611f30565b610dac565b3480156102c6575f5ffd5b50604080518082018252601a81527f7268696e6573746f6e652e73616665373537392e76312e302e30000000000000602082015290516101879190612056565b348015610311575f5ffd5b5061032561032036600461206f565b610dfd565b6040519015158152602001610187565b348015610340575f5ffd5b5061013a61034f366004612086565b610ea4565b34801561035f575f5ffd5b5061013a61036e3660046121a6565b611040565b34801561037e575f5ffd5b5061032561038d36600461206f565b6112b8565b34801561039d575f5ffd5b50610201611305565b3330146103c657604051630a57d61d60e01b815260040160405180910390fd5b60405163610b592560e01b81526001600160a01b038b166004820152309063610b5925906024015f604051808303815f87803b158015610404575f5ffd5b505af1158015610416573d5f5f3e3d5ffd5b5050604080515f8082526020820190925230935063540fb4f992509061045e565b604080518082019091525f8152606060208201528152602001906001900390816104375790505b508b8b8b8b8b8b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018d8d808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050509082525060ff8c166020909101526040516001600160e01b031960e08b901b1681526105069897969594939291906004016123d0565b5f604051808303815f87803b15801561051d575f5ffd5b505af115801561052f573d5f5f3e3d5ffd5b5050505050505050505050505050565b5f80547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461058e576040516308e3edd160e41b815260040160405180910390fd5b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d757604051632039d3c960e01b815260040160405180910390fd5b6105e46060850185612442565b6105f2916004915f91612484565b6105fb916124ab565b6001600160e01b03191663d9ed0e8f60e01b1461062b5760405163c3d40f7760e01b815260040160405180910390fd5b5f6106396060860186612442565b610647916004908290612484565b8101906106549190611f30565b905061066b5f516020612aba5f395f51905f525490565b61067482610dac565b146106925760405163278328b160e21b815260040160405180910390fd5b5f5f866020013590508060601c91505f8360a001516001600160a01b03168460c001516040516024016106c591906124e3565b60408051601f19818403018152918152602080830180516001600160e01b0316633cd56b0760e11b17905290516106ff929133910161250c565b60408051601f198184030181529082905261071991612533565b5f604051808303815f865af19150503d805f8114610752576040519150601f19603f3d011682016040523d82523d5f602084013e610757565b606091505b50509050806107795760405163c3d40f7760e01b815260040160405180910390fd5b60c0840151515f90815b81811015610893575f8760c0015182815181106107a2576107a261253e565b60200260200101515f01519050806001600160a01b0316636d61fe708960c0015184815181106107d4576107d461253e565b6020026020010151602001516040518263ffffffff1660e01b81526004016107fc9190612056565b5f604051808303815f87803b158015610813575f5ffd5b505af1158015610825573d5f5f3e3d5ffd5b505060408051600181526001600160a01b03851660208201527fd21d0b289f126c4b473ea641963e766833c2f13866e4ff480abd787c100ef123935001905060405180910390a1866001600160a01b0316816001600160a01b03160361088a57600193505b50600101610783565b50811561090f57604051639700320360e01b81526001600160a01b038616906397003203906108c8908d908d90600401612631565b6020604051808303815f875af11580156108e4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109089190612652565b9650610934565b5f5f5f61091c898e61135d565b92509250925061092e831583836114c9565b99505050505b8715610944575f5f5f5f8b335af1505b5050505050509392505050565b5f547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461099f576040516308e3edd160e41b815260040160405180910390fd5b5f6109b55f516020612aba5f395f51905f525490565b146109d35760405163d4d496e560e01b815260040160405180910390fd5b6109e8845f516020612aba5f395f51905f5255565b6001600160a01b03831615610a73575f836001600160a01b03168383604051610a12929190612669565b5f60405180830381855af49150503d805f8114610a4a576040519150601f19603f3d011682016040523d82523d5f602084013e610a4f565b606091505b5050905080610a7157604051631f57fed560e31b815260040160405180910390fd5b505b50505050565b60605f80823682610a8e610100890189612442565b9092509050610aa060065f8385612484565b610aa991612678565b60d01c9450610abc600c60068385612484565b610ac591612678565b60d01c9350610ad781600c8185612484565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250604080516101c081019091527fc03dfc11d8b10bf9cf703d558958c8c42777f785d998c62060d85a4f0ef6ea7f815294975095509293505060208084019250610b5291508a018a6126ae565b6001600160a01b0316815260200188602001358152602001888060400190610b7a9190612442565b604051610b88929190612669565b6040519081900390208152602001610ba360608a018a612442565b604051610bb1929190612669565b60405180910390208152602001610bc7896114ff565b6001600160801b03168152602001610bde89611514565b6001600160801b031681526020018860a001358152602001610bff89611528565b6001600160801b03168152602001610c1689611536565b6001600160801b03168152602001610c3160e08a018a612442565b604051610c3f929190612669565b6040805191829003909120825265ffffffffffff80881660208401528616908201526001600160a01b0388166060909101526101c08120909150601960f81b600160f81b610c8b611305565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529550505092959194509250565b5f818051906020012083604051602001610cf7929190918252602082015260400190565b60405160208183030381529060405280519060200120925060ff60f81b858486896001600160a01b0316604051602001610d329291906126c9565b60405160208183030381529060405280519060200120604051602001610d8a94939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209695505050505050565b80516020808301516040808501516060860151608087015160a088015160c089015194515f98610de09890979691016126e1565b604051602081830303815290604052805190602001209050919050565b5f81600881901b6001600160f81b03198216600160f81b03610e225760019250610e5d565b6001600160f81b03198216610e3a5760019250610e5d565b6001600160f81b031980831603610e545760019250610e5d565b505f9392505050565b828015610e7257506001600160f81b03198116155b15610e7e575050919050565b828015610e9857506001600160f81b03198116600160f81b145b15610e54575050919050565b60405163610b592560e01b81526001600160a01b038d166004820152309063610b5925906024015f604051808303815f87803b158015610ee2575f5ffd5b505af1158015610ef4573d5f5f3e3d5ffd5b505060405163f08a032360e01b81526001600160a01b038f16600482015230925063f08a032391506024015f604051808303815f87803b158015610f36575f5ffd5b505af1158015610f48573d5f5f3e3d5ffd5b50505050306001600160a01b031663540fb4f98c8c8c8c8c8c8c8c60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018e8e808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050509082525060ff8d166020909101526040516001600160e01b031960e08c901b1681526110059998979695949392919060040161275d565b5f604051808303815f87803b15801561101c575f5ffd5b505af115801561102e573d5f5f3e3d5ffd5b50505050505050505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461108957604051632039d3c960e01b815260040160405180910390fd5b61109660208201826126ae565b5f80546001600160a01b0319166001600160a01b039283161790557f0000000000000000000000000000000000000000000000000000000000000000166110e360808301606084016126ae565b6001600160a01b03161461110a57604051633007073760e01b815260040160405180910390fd5b6302b994c760e31b61111f6080830183612442565b61112d916004915f91612484565b611136916124ab565b6001600160e01b0319161461115e57604051633007073760e01b815260040160405180910390fd5b3063b63e800d61117160208401846127d1565b604085013561118660808701606088016126ae565b6111936080880188612442565b6111a360c08a0160a08b016126ae565b5f5f5f6040518b63ffffffff1660e01b81526004016111cb9a99989796959493929190612816565b5f604051808303815f87803b1580156111e2575f5ffd5b505af11580156111f4573d5f5f3e3d5ffd5b50505f5f516020612aba5f395f51905f52555061120e9050565b5f8061122060c0840160a085016126ae565b6001600160a01b031661123660e0850185612442565b30604051602001611249939291906128cc565b60408051601f198184030181529082905261126391612533565b5f604051808303815f865af19150503d805f811461129c576040519150601f19603f3d011682016040523d82523d5f602084013e6112a1565b606091505b5091509150816112b357805160208201fd5b505050565b5f600182036112c957506001919050565b600282036112d957506001919050565b600382036112e957506001919050565b600482036112f957506001919050565b505f919050565b919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218602082015246918101919091523060608201525f9060800160405160208183030381529060405280519060200120905090565b5f5f5f6060808660a001516001600160a01b03166355d559f4877f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016113b59291906128ed565b5f60405180830381865afa1580156113cf573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526113f69190810190612978565b8351602085012060408c0151929850929650929450919250905f9061141e908390859061154a565b9050611429816116f8565b6020890151611437816116f8565b61144081611704565b80515f805b828110156114b6575f61147a8583815181106114635761146361253e565b60200260200101518761170d90919063ffffffff16565b50905080156114ad578261148d81612a0f565b9350508d6040015183106114ad5760019b505050505050505050506114c2565b50600101611445565b505f9950505050505050505b9250925092565b5f60d08265ffffffffffff16901b60a08465ffffffffffff16901b856114ef575f6114f2565b60015b60ff161717949350505050565b5f61150e826080013560801c90565b92915050565b5f6001600160801b0360808301351661150e565b5f60c082013560801c61150e565b5f6001600160801b0360c08301351661150e565b81516060905f61155b604183612a27565b9050806001600160401b0381111561157557611575611c39565b60405190808252806020026020018201604052801561159e578160200160208202803683370190505b509250838110156115c257604051638baa579f60e01b815260040160405180910390fd5b5f5f5b828110156116cc575f5f5f5f6115f28b8660410201602081015160408201516060909201515f1a92909190565b9250925092508260ff165f036116165761160f8c8c84848c61172e565b9350611674565b601e8360ff1611156116655761160f6116538d6020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042090565b61165e600486612a46565b84846117f6565b6116718c8484846117f6565b93505b6001600160a01b03841615611691578561168d81612a0f565b9650505b838986815181106116a4576116a461253e565b6001600160a01b03909216602092830291909101909101525050600190920191506115c59050565b50848110156116ee57604051638baa579f60e01b815260040160405180910390fd5b5050509392505050565b61170181611830565b50565b61170181611885565b5f8061172384846001600160a01b03165f6118ce565b909590945092505050565b838201602001518390826117428583612a5f565b61174d906020612a5f565b111561175c575f9150506117ed565b604051630b135d3f60e11b808252878601602001916001600160a01b03851690631626ba7e90611792908c908690600401612a72565b602060405180830381865afa1580156117ad573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117d19190612a92565b6001600160e01b031916146117ea575f925050506117ed565b50505b95945050505050565b5f604051855f5260ff851660205283604052826060526020604060805f60015afa505f6060523d6060185191508060405250949350505050565b80515f82528060051b8201601f19602084015b60200182811161187e578051828201805182811161186357505050611843565b5b602082015283018051828111611864575060200152611843565b5050509052565b6002815110611701576020810160408201600183510160051b83015b81518351146118b557602083019250815183525b6020820191508082036118a157505081900360051c9052565b5f5f5f19600186515f87870197505b81830160011c94508460051b89015187019050878114828411176119175780881161190c5783850191506118dd565b6001850192506118dd565b84151597148716989290930190950295509350505050565b6001600160a01b0381168114611701575f5ffd5b80356113008161192f565b5f5f83601f84011261195e575f5ffd5b5081356001600160401b03811115611974575f5ffd5b6020830191508360208260051b850101111561198e575f5ffd5b9250929050565b803560ff81168114611300575f5ffd5b5f5f5f5f5f5f5f5f5f5f60c08b8d0312156119be575f5ffd5b6119c78b611943565b995060208b01356001600160401b038111156119e1575f5ffd5b6119ed8d828e0161194e565b909a5098505060408b01356001600160401b03811115611a0b575f5ffd5b611a178d828e0161194e565b90985096505060608b01356001600160401b03811115611a35575f5ffd5b611a418d828e0161194e565b90965094505060808b01356001600160401b03811115611a5f575f5ffd5b611a6b8d828e0161194e565b9094509250611a7e905060a08c01611995565b90509295989b9194979a5092959850565b5f6101208284031215611aa0575f5ffd5b50919050565b5f5f5f60608486031215611ab8575f5ffd5b83356001600160401b03811115611acd575f5ffd5b611ad986828701611a8f565b9660208601359650604090950135949350505050565b5f5f5f5f60608587031215611b02575f5ffd5b843593506020850135611b148161192f565b925060408501356001600160401b03811115611b2e575f5ffd5b8501601f81018713611b3e575f5ffd5b80356001600160401b03811115611b53575f5ffd5b876020828401011115611b64575f5ffd5b949793965060200194505050565b5f5f60408385031215611b83575f5ffd5b82356001600160401b03811115611b98575f5ffd5b611ba485828601611a8f565b9250506020830135611bb58161192f565b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b608081525f611c006080830187611bc0565b65ffffffffffff8616602084015265ffffffffffff851660408401528281036060840152611c2e8185611bc0565b979650505050505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b0381118282101715611c6f57611c6f611c39565b60405290565b60405161010081016001600160401b0381118282101715611c6f57611c6f611c39565b604051601f8201601f191681016001600160401b0381118282101715611cc057611cc0611c39565b604052919050565b5f6001600160401b03821115611ce057611ce0611c39565b50601f01601f191660200190565b5f82601f830112611cfd575f5ffd5b8135611d10611d0b82611cc8565b611c98565b818152846020838601011115611d24575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f5f5f60a08688031215611d54575f5ffd5b8535611d5f8161192f565b94506020860135611d6f8161192f565b935060408601356001600160401b03811115611d89575f5ffd5b611d9588828901611cee565b9350506060860135915060808601356001600160401b03811115611db7575f5ffd5b611dc388828901611cee565b9150509295509295909350565b5f6001600160401b03821115611de857611de8611c39565b5060051b60200190565b5f82601f830112611e01575f5ffd5b8135611e0f611d0b82611dd0565b8082825260208201915060208360051b860101925085831115611e30575f5ffd5b602085015b83811015611e56578035611e488161192f565b835260209283019201611e35565b5095945050505050565b5f82601f830112611e6f575f5ffd5b8135611e7d611d0b82611dd0565b8082825260208201915060208360051b860101925085831115611e9e575f5ffd5b602085015b83811015611e565780356001600160401b03811115611ec0575f5ffd5b86016040818903601f19011215611ed5575f5ffd5b611edd611c4d565b6020820135611eeb8161192f565b815260408201356001600160401b03811115611f05575f5ffd5b611f148a602083860101611cee565b6020830152508085525050602083019250602081019050611ea3565b5f60208284031215611f40575f5ffd5b81356001600160401b03811115611f55575f5ffd5b82016101008185031215611f67575f5ffd5b611f6f611c75565b611f7882611943565b815260208201356001600160401b03811115611f92575f5ffd5b611f9e86828501611df2565b60208301525060408281013590820152611fba60608301611943565b606082015260808201356001600160401b03811115611fd7575f5ffd5b611fe386828501611cee565b608083015250611ff560a08301611943565b60a082015260c08201356001600160401b03811115612012575f5ffd5b61201e86828501611e60565b60c08301525060e08201356001600160401b0381111561203c575f5ffd5b61204886828501611cee565b60e083015250949350505050565b602081525f6120686020830184611bc0565b9392505050565b5f6020828403121561207f575f5ffd5b5035919050565b5f5f5f5f5f5f5f5f5f5f5f5f60e08d8f0312156120a1575f5ffd5b6120aa8d611943565b9b506001600160401b0360208e013511156120c3575f5ffd5b6120d38e60208f01358f0161194e565b909b5099506001600160401b0360408e013511156120ef575f5ffd5b6120ff8e60408f01358f0161194e565b90995097506001600160401b0360608e0135111561211b575f5ffd5b61212b8e60608f01358f0161194e565b90975095506001600160401b0360808e01351115612147575f5ffd5b6121578e60808f01358f0161194e565b90955093506001600160401b0360a08e01351115612173575f5ffd5b6121838e60a08f01358f0161194e565b909350915061219460c08e01611995565b90509295989b509295989b509295989b565b5f602082840312156121b6575f5ffd5b81356001600160401b038111156121cb575f5ffd5b82016101008185031215612068575f5ffd5b5f82825180855260208501945060208160051b830101602085015f5b8381101561224b57848303601f19018852815180516001600160a01b0316845260209081015160409185018290529061223490850182611bc0565b6020998a01999094509290920191506001016121f9565b50909695505050505050565b5f5f8335601e1984360301811261226c575f5ffd5b83016020810192503590506001600160401b0381111561228a575f5ffd5b80360382131561198e575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b5f8383855260208501945060208460051b820101835f5b8681101561224b57838303601f19018852813536879003603e190181126122fc575f5ffd5b860180356123098161192f565b6001600160a01b031684526123216020820182612257565b915060406020860152612338604086018383612298565b60209a8b019a909550939093019250506001016122d7565b5f8151808452602084019350602083015f5b828110156123895781516001600160a01b0316865260209586019590910190600101612362565b5093949350505050565b60018060a01b0381511682525f6020820151606060208501526123b96060850182612350565b60409384015160ff16949093019390935250919050565b60a081525f6123e260a083018b6121dd565b82810360208401526123f5818a8c6122c0565b9050828103604084015261240a81888a6122c0565b9050828103606084015261241f8186886122c0565b905082810360808401526124338185612393565b9b9a5050505050505050505050565b5f5f8335601e19843603018112612457575f5ffd5b8301803591506001600160401b03821115612470575f5ffd5b60200191503681900382131561198e575f5ffd5b5f5f85851115612492575f5ffd5b8386111561249e575f5ffd5b5050820193919092039150565b80356001600160e01b031981169060048410156124dc576001600160e01b0319600485900360031b81901b82161691505b5092915050565b602081525f61206860208301846121dd565b5f81518060208401855e5f93019283525090919050565b5f61251782856124f5565b60609390931b6001600160601b03191683525050601401919050565b5f61206882846124f5565b634e487b7160e01b5f52603260045260245ffd5b61256c8261255f83611943565b6001600160a01b03169052565b602081810135908301525f6125846040830183612257565b610120604086015261259b61012086018284612298565b9150506125ab6060840184612257565b85830360608701526125be838284612298565b6080868101359088015260a0808701359088015260c0808701359088015292506125ee91505060e0840184612257565b85830360e0870152612601838284612298565b92505050612613610100840184612257565b858303610100870152612627838284612298565b9695505050505050565b604081525f6126436040830185612552565b90508260208301529392505050565b5f60208284031215612662575f5ffd5b5051919050565b818382375f9101908152919050565b80356001600160d01b031981169060068410156124dc576001600160d01b031960069490940360031b84901b1690921692915050565b5f602082840312156126be575f5ffd5b81356120688161192f565b5f6126d482856124f5565b9283525050602001919050565b6001600160a01b038816815260e0602082018190525f9061270490830189612350565b604083018890526001600160a01b0387166060840152828103608084015261272c8187611bc0565b6001600160a01b03861660a085015283810360c0850152905061274f81856121dd565b9a9950505050505050505050565b60a081525f61277060a083018b8d6122c0565b8281036020840152612783818a8c6122c0565b9050828103604084015261279881888a6122c0565b905082810360608401526127ad8186886122c0565b905082810360808401526127c18185612393565b9c9b505050505050505050505050565b5f5f8335601e198436030181126127e6575f5ffd5b8301803591506001600160401b038211156127ff575f5ffd5b6020019150600581901b360382131561198e575f5ffd5b61010080825281018a90525f8b6101208301825b8d81101561285a57823561283d8161192f565b6001600160a01b031682526020928301929091019060010161282a565b508b6020850152612876604085018c6001600160a01b03169052565b8381036060850152612889818a8c612298565b925050506128a260808301876001600160a01b03169052565b6001600160a01b03851660a08301528360c083015261243360e08301846001600160a01b03169052565b8284823760609190911b6001600160601b0319169101908152601401919050565b604081525f6128ff6040830185612552565b905060018060a01b03831660208301529392505050565b5f82601f830112612925575f5ffd5b8151612933611d0b82611cc8565b818152846020838601011115612947575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b805165ffffffffffff81168114611300575f5ffd5b5f5f5f5f6080858703121561298b575f5ffd5b84516001600160401b038111156129a0575f5ffd5b6129ac87828801612916565b9450506129bb60208601612963565b92506129c960408601612963565b915060608501516001600160401b038111156129e3575f5ffd5b6129ef87828801612916565b91505092959194509250565b634e487b7160e01b5f52601160045260245ffd5b5f60018201612a2057612a206129fb565b5060010190565b5f82612a4157634e487b7160e01b5f52601260045260245ffd5b500490565b60ff828116828216039081111561150e5761150e6129fb565b8082018082111561150e5761150e6129fb565b828152604060208201525f612a8a6040830184611bc0565b949350505050565b5f60208284031215612aa2575f5ffd5b81516001600160e01b031981168114612068575f5ffdfe982e06ee6a56dfc0f1ac189a5d23506361ca0a3ce45a9c7b8d33d65d43746a24a26469706673582212202743bdb6fa7f6019957a30729ca526238eb7396585ce107361a38422f5e4500b64736f6c634300081c0033";

type TSafe7579LaunchpadConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TSafe7579LaunchpadConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TSafe7579Launchpad__factory extends ContractFactory {
  constructor(...args: TSafe7579LaunchpadConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entryPoint: AddressLike,
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(entryPoint, registry, overrides || {});
  }
  override deploy(
    entryPoint: AddressLike,
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(entryPoint, registry, overrides || {}) as Promise<
      TSafe7579Launchpad & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TSafe7579Launchpad__factory {
    return super.connect(runner) as TSafe7579Launchpad__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TSafe7579LaunchpadInterface {
    return new Interface(_abi) as TSafe7579LaunchpadInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TSafe7579Launchpad {
    return new Contract(address, _abi, runner) as unknown as TSafe7579Launchpad;
  }
}
