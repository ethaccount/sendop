/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Safe7579Launchpad,
  Safe7579LaunchpadInterface,
} from "../../../manual/safe/Safe7579Launchpad";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "entryPoint",
        type: "address",
        internalType: "address",
      },
      {
        name: "registry",
        type: "address",
        internalType: "contract IERC7484",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "REGISTRY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC7484",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SUPPORTED_ENTRYPOINT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "accountId",
    inputs: [],
    outputs: [
      {
        name: "accountImplementationId",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "addSafe7579",
    inputs: [
      {
        name: "safe7579",
        type: "address",
        internalType: "address",
      },
      {
        name: "modules",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "moduleType",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "attesters",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "threshold",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "domainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getInitHash",
    inputs: [],
    outputs: [
      {
        name: "value",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSafeOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "entryPoint",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "operationData",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "validAfter",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "validUntil",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "signatures",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hash",
    inputs: [
      {
        name: "data",
        type: "tuple",
        internalType: "struct Safe7579Launchpad.InitData",
        components: [
          {
            name: "singleton",
            type: "address",
            internalType: "address",
          },
          {
            name: "owners",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "threshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "setupTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "setupData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "safe7579",
            type: "address",
            internalType: "contract ISafe7579",
          },
          {
            name: "validators",
            type: "tuple[]",
            internalType: "struct ModuleInit[]",
            components: [
              {
                name: "module",
                type: "address",
                internalType: "address",
              },
              {
                name: "initData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "moduleType",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "initSafe7579",
    inputs: [
      {
        name: "safe7579",
        type: "address",
        internalType: "address",
      },
      {
        name: "modules",
        type: "tuple[]",
        internalType: "struct ModuleInit[]",
        components: [
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
          {
            name: "initData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "moduleType",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "attesters",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "threshold",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "preValidationSetup",
    inputs: [
      {
        name: "initHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "preInit",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "predictSafeAddress",
    inputs: [
      {
        name: "singleton",
        type: "address",
        internalType: "address",
      },
      {
        name: "safeProxyFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "creationCode",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "factoryInitializer",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "safeProxy",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "setupSafe",
    inputs: [
      {
        name: "initData",
        type: "tuple",
        internalType: "struct Safe7579Launchpad.InitData",
        components: [
          {
            name: "singleton",
            type: "address",
            internalType: "address",
          },
          {
            name: "owners",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "threshold",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "setupTo",
            type: "address",
            internalType: "address",
          },
          {
            name: "setupData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "safe7579",
            type: "address",
            internalType: "contract ISafe7579",
          },
          {
            name: "validators",
            type: "tuple[]",
            internalType: "struct ModuleInit[]",
            components: [
              {
                name: "module",
                type: "address",
                internalType: "address",
              },
              {
                name: "initData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "moduleType",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsExecutionMode",
    inputs: [
      {
        name: "encodedMode",
        type: "bytes32",
        internalType: "ModeCode",
      },
    ],
    outputs: [
      {
        name: "supported",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "supportsModule",
    inputs: [
      {
        name: "moduleTypeId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "userOpHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "validationData",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ModuleInstalled",
    inputs: [
      {
        name: "moduleTypeId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "module",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ModuleUninstalled",
    inputs: [
      {
        name: "moduleTypeId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "module",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidEntryPoint",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitHash",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSetup",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidUserOperationData",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyDelegatecall",
    inputs: [],
  },
  {
    type: "error",
    name: "OnlyProxy",
    inputs: [],
  },
  {
    type: "error",
    name: "PreValidationSetupFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "Safe7579LaunchpadAlreadyInitialized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60e060405234801561000f575f5ffd5b5060405161298938038061298983398101604081905261002e91610087565b6001600160a01b03821661005557604051632039d3c960e01b815260040160405180910390fd5b306080526001600160a01b0391821660a0521660c0526100bf565b6001600160a01b0381168114610084575f5ffd5b50565b5f5f60408385031215610098575f5ffd5b82516100a381610070565b60208401519092506100b481610070565b809150509250929050565b60805160a05160c0516128706101195f395f8181610151015261087f01525f81816101a10152818161040001528181610d5c015261118901525f818160f0015281816103ab015281816109470152610dc401526128705ff3fe6080604052600436106100e7575f3560e01c8063663c87d811610087578063d03c791411610057578063d03c791414610325578063f1dabbe014610354578063f2dc691d14610373578063f698da2514610392575f5ffd5b8063663c87d81461027d5780639cfd7cff1461029c5780639e5b1c2a146102e7578063a3aa6b3214610306575f5ffd5b80633c9de1b8116100c25780633c9de1b8146101f057806347cbbdca146102105780634fff40e11461022f57806355d559f41461024e575f5ffd5b806306433b1b14610140578063137e051e1461019057806319822f7c146101c3575f5ffd5b3661013c575f547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461013a576040516308e3edd160e41b815260040160405180910390fd5b005b5f5ffd5b34801561014b575f5ffd5b506101737f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019b575f5ffd5b506101737f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ce575f5ffd5b506101e26101dd3660046117b7565b6103a6565b604051908152602001610187565b3480156101fb575f5ffd5b505f51602061281b5f395f51905f52546101e2565b34801561021b575f5ffd5b5061013a61022a36600461186b565b6107b8565b34801561023a575f5ffd5b5061013a610249366004611902565b610943565b348015610259575f5ffd5b5061026d610268366004611aaf565b610a6b565b6040516101879493929190611c13565b348015610288575f5ffd5b50610173610297366004611c5e565b610c2c565b3480156102a7575f5ffd5b50604080518082018252601a81527f7268696e6573746f6e652e73616665373537392e76312e302e30000000000000602082015290516101879190611cee565b3480156102f2575f5ffd5b5061013a61030136600461186b565b610d05565b348015610311575f5ffd5b5061013a610320366004611d00565b610d51565b348015610330575f5ffd5b5061034461033f366004611d37565b610fc9565b6040519015158152602001610187565b34801561035f575f5ffd5b506101e261036e366004611eb4565b611077565b34801561037e575f5ffd5b5061034461038d366004611d37565b6110c8565b34801561039d575f5ffd5b506101e2611115565b5f80547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146103f5576040516308e3edd160e41b815260040160405180910390fd5b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461043e57604051632039d3c960e01b815260040160405180910390fd5b61044b6060850185611fda565b610459916004915f9161201c565b61046291612043565b6001600160e01b0319166351d5359960e11b146104925760405163c3d40f7760e01b815260040160405180910390fd5b5f6104a06060860186611fda565b6104ae91600490829061201c565b8101906104bb9190611eb4565b90506104d25f51602061281b5f395f51905f525490565b6104db82611077565b146104f95760405163278328b160e21b815260040160405180910390fd5b5f5f866020013590508060601c91505f8360a001516001600160a01b03168460c0015160405160240161052c9190612102565b60408051601f19818403018152918152602080830180516001600160e01b0316633c4ddc9d60e01b1790529051610566929133910161212b565b60408051601f198184030181529082905261058091612152565b5f604051808303815f865af19150503d805f81146105b9576040519150601f19603f3d011682016040523d82523d5f602084013e6105be565b606091505b50509050806105e05760405163c3d40f7760e01b815260040160405180910390fd5b60c0840151515f90815b818110156106fa575f8760c0015182815181106106095761060961215d565b60200260200101515f01519050806001600160a01b0316636d61fe708960c00151848151811061063b5761063b61215d565b6020026020010151602001516040518263ffffffff1660e01b81526004016106639190611cee565b5f604051808303815f87803b15801561067a575f5ffd5b505af115801561068c573d5f5f3e3d5ffd5b505060408051600181526001600160a01b03851660208201527fd21d0b289f126c4b473ea641963e766833c2f13866e4ff480abd787c100ef123935001905060405180910390a1866001600160a01b0316816001600160a01b0316036106f157600193505b506001016105ea565b50811561077657604051639700320360e01b81526001600160a01b0386169063970032039061072f908d908d906004016122b9565b6020604051808303815f875af115801561074b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061076f91906122da565b965061079b565b5f5f5f610783898e61116d565b925092509250610795831583836112d9565b99505050505b87156107ab575f5f5f5f8b335af1505b5050505050509392505050565b60405163610b592560e01b81526001600160a01b0387166004820152309063610b5925906024015f604051808303815f87803b1580156107f6575f5ffd5b505af1158015610808573d5f5f3e3d5ffd5b505060405163f08a032360e01b81526001600160a01b038916600482015230925063f08a032391506024015b5f604051808303815f87803b15801561084b575f5ffd5b505af115801561085d573d5f5f3e3d5ffd5b50505050306001600160a01b0316633065ca43868660405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018888808060200260200160405190810160405280939291908181526020018383602002808284375f9201919091525050509082525060ff87166020909101526040516001600160e01b031960e086901b16815261090e93929190600401612371565b5f604051808303815f87803b158015610925575f5ffd5b505af1158015610937573d5f5f3e3d5ffd5b50505050505050505050565b5f547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116911614610991576040516308e3edd160e41b815260040160405180910390fd5b5f6109a75f51602061281b5f395f51905f525490565b146109c55760405163d4d496e560e01b815260040160405180910390fd5b6109da845f51602061281b5f395f51905f5255565b6001600160a01b03831615610a65575f836001600160a01b03168383604051610a0492919061242b565b5f60405180830381855af49150503d805f8114610a3c576040519150601f19603f3d011682016040523d82523d5f602084013e610a41565b606091505b5050905080610a6357604051631f57fed560e31b815260040160405180910390fd5b505b50505050565b6101008201516060905f9081908390610a8681846006611311565b610a8f9061243a565b60d01c9350610aa1816006600c611311565b610aaa9061243a565b60d01c9250610aba81600c611376565b9150505f604051806101c001604052807fc03dfc11d8b10bf9cf703d558958c8c42777f785d998c62060d85a4f0ef6ea7f5f1b8152602001885f01516001600160a01b031681526020018860200151815260200188604001518051906020012081526020018860600151805190602001208152602001610b3989611384565b6001600160801b03168152602001610b5089611399565b6001600160801b031681526020018860a001518152602001610b71896113ae565b6001600160801b03168152602001610b88896113bd565b6001600160801b0316815260e089015180516020918201209082015265ffffffffffff8087166040830152851660608201526001600160a01b0388166080909101526101c08120909150601960f81b600160f81b610be4611115565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529550505092959194509250565b5f818051906020012083604051602001610c50929190918252602082015260400190565b60405160208183030381529060405280519060200120925060ff60f81b858486896001600160a01b0316604051602001610c8b929190612474565b60405160208183030381529060405280519060200120604051602001610ce394939291906001600160f81b031994909416845260609290921b6001600160601b03191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209695505050505050565b333014610d2557604051630a57d61d60e01b815260040160405180910390fd5b60405163610b592560e01b81526001600160a01b0387166004820152309063610b592590602401610834565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d9a57604051632039d3c960e01b815260040160405180910390fd5b610da7602082018261248c565b5f80546001600160a01b0319166001600160a01b039283161790557f000000000000000000000000000000000000000000000000000000000000000016610df4608083016060840161248c565b6001600160a01b031614610e1b57604051633007073760e01b815260040160405180910390fd5b634f2d8e1560e11b610e306080830183611fda565b610e3e916004915f9161201c565b610e4791612043565b6001600160e01b03191614610e6f57604051633007073760e01b815260040160405180910390fd5b3063b63e800d610e8260208401846124a7565b6040850135610e97608087016060880161248c565b610ea46080880188611fda565b610eb460c08a0160a08b0161248c565b5f5f5f6040518b63ffffffff1660e01b8152600401610edc9a999897969594939291906124ec565b5f604051808303815f87803b158015610ef3575f5ffd5b505af1158015610f05573d5f5f3e3d5ffd5b50505f5f51602061281b5f395f51905f525550610f1f9050565b5f80610f3160c0840160a0850161248c565b6001600160a01b0316610f4760e0850185611fda565b30604051602001610f5a939291906125b1565b60408051601f1981840301815290829052610f7491612152565b5f604051808303815f865af19150503d805f8114610fad576040519150601f19603f3d011682016040523d82523d5f602084013e610fb2565b606091505b509150915081610fc457805160208201fd5b505050565b5f81600881901b6001600160f81b03198216600160f81b03610fee5760019250611029565b6001600160f81b031982166110065760019250611029565b6001600160f81b0319808316036110205760019250611029565b505f9392505050565b82801561103e57506001600160f81b03198116155b1561104a575050919050565b82801561106457506001600160f81b03198116600160f81b145b15611020575050919050565b5050919050565b80516020808301516040808501516060860151608087015160a088015160c089015194515f986110ab9890979691016125d2565b604051602081830303815290604052805190602001209050919050565b5f600182036110d957506001919050565b600282036110e957506001919050565b600382036110f957506001919050565b6004820361110957506001919050565b505f919050565b919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218602082015246918101919091523060608201525f9060800160405160208183030381529060405280519060200120905090565b5f5f5f6060808660a001516001600160a01b03166355d559f4877f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016111c592919061264e565b5f60405180830381865afa1580156111df573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261120691908101906126d9565b8351602085012060408c0151929850929650929450919250905f9061122e90839085906113d2565b905061123981611580565b602089015161124781611580565b6112508161158c565b80515f805b828110156112c6575f61128a8583815181106112735761127361215d565b60200260200101518761159590919063ffffffff16565b50905080156112bd578261129d81612770565b9350508d6040015183106112bd5760019b505050505050505050506112d2565b50600101611255565b505f9950505050505050505b9250925092565b5f60d08265ffffffffffff16901b60a08465ffffffffffff16901b856112ff575f611302565b60015b60ff16171790505b9392505050565b60608351828111611320578092505b83811161132b578093505b508183101561130a5750604051828203848401601f19601f830181165b8281015185820152810180611348575050508060208301015f81526020810160405250808252509392505050565b606061130a83835f19611311565b5f611393826080015160801c90565b92915050565b5f61139382608001516001600160801b031690565b5f6113938260c0015160801c90565b5f6113938260c001516001600160801b031690565b81516060905f6113e3604183612788565b9050806001600160401b038111156113fd576113fd611985565b604051908082528060200260200182016040528015611426578160200160208202803683370190505b5092508381101561144a57604051638baa579f60e01b815260040160405180910390fd5b5f5f5b82811015611554575f5f5f5f61147a8b8660410201602081015160408201516060909201515f1a92909190565b9250925092508260ff165f0361149e576114978c8c84848c6115b6565b93506114fc565b601e8360ff1611156114ed576114976114db8d6020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042090565b6114e66004866127a7565b848461167e565b6114f98c84848461167e565b93505b6001600160a01b03841615611519578561151581612770565b9650505b8389868151811061152c5761152c61215d565b6001600160a01b039092166020928302919091019091015250506001909201915061144d9050565b508481101561157657604051638baa579f60e01b815260040160405180910390fd5b5050509392505050565b611589816116b8565b50565b6115898161170d565b5f806115ab84846001600160a01b03165f611756565b909590945092505050565b838201602001518390826115ca85836127c0565b6115d59060206127c0565b11156115e4575f915050611675565b604051630b135d3f60e11b808252878601602001916001600160a01b03851690631626ba7e9061161a908c9086906004016127d3565b602060405180830381865afa158015611635573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061165991906127f3565b6001600160e01b03191614611672575f92505050611675565b50505b95945050505050565b5f604051855f5260ff851660205283604052826060526020604060805f60015afa505f6060523d6060185191508060405250949350505050565b80515f82528060051b8201601f19602084015b60200182811161170657805182820180518281116116eb575050506116cb565b5b6020820152830180518281116116ec5750602001526116cb565b5050509052565b6002815110611589576020810160408201600183510160051b83015b815183511461173d57602083019250815183525b60208201915080820361172957505081900360051c9052565b5f5f5f19600186515f87870197505b81830160011c94508460051b890151870190508781148284111761179f57808811611794578385019150611765565b600185019250611765565b84151597148716989290930190950295509350505050565b5f5f5f606084860312156117c9575f5ffd5b83356001600160401b038111156117de575f5ffd5b840161012081870312156117f0575f5ffd5b95602085013595506040909401359392505050565b6001600160a01b0381168114611589575f5ffd5b803561111081611805565b5f5f83601f840112611834575f5ffd5b5081356001600160401b0381111561184a575f5ffd5b6020830191508360208260051b8501011115611864575f5ffd5b9250929050565b5f5f5f5f5f5f60808789031215611880575f5ffd5b863561188b81611805565b955060208701356001600160401b038111156118a5575f5ffd5b6118b189828a01611824565b90965094505060408701356001600160401b038111156118cf575f5ffd5b6118db89828a01611824565b909450925050606087013560ff811681146118f4575f5ffd5b809150509295509295509295565b5f5f5f5f60608587031215611915575f5ffd5b84359350602085013561192781611805565b925060408501356001600160401b03811115611941575f5ffd5b8501601f81018713611951575f5ffd5b80356001600160401b03811115611966575f5ffd5b876020828401011115611977575f5ffd5b949793965060200194505050565b634e487b7160e01b5f52604160045260245ffd5b60405161012081016001600160401b03811182821017156119bc576119bc611985565b60405290565b604051606081016001600160401b03811182821017156119bc576119bc611985565b60405161010081016001600160401b03811182821017156119bc576119bc611985565b604051601f8201601f191681016001600160401b0381118282101715611a2f57611a2f611985565b604052919050565b5f6001600160401b03821115611a4f57611a4f611985565b50601f01601f191660200190565b5f82601f830112611a6c575f5ffd5b8135611a7f611a7a82611a37565b611a07565b818152846020838601011115611a93575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f60408385031215611ac0575f5ffd5b82356001600160401b03811115611ad5575f5ffd5b83016101208186031215611ae7575f5ffd5b611aef611999565b611af882611819565b81526020828101359082015260408201356001600160401b03811115611b1c575f5ffd5b611b2887828501611a5d565b60408301525060608201356001600160401b03811115611b46575f5ffd5b611b5287828501611a5d565b6060830152506080828101359082015260a0808301359082015260c0808301359082015260e08201356001600160401b03811115611b8e575f5ffd5b611b9a87828501611a5d565b60e0830152506101008201356001600160401b03811115611bb9575f5ffd5b611bc587828501611a5d565b610100830152509250611bdc905060208401611819565b90509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b608081525f611c256080830187611be5565b65ffffffffffff8616602084015265ffffffffffff851660408401528281036060840152611c538185611be5565b979650505050505050565b5f5f5f5f5f60a08688031215611c72575f5ffd5b8535611c7d81611805565b94506020860135611c8d81611805565b935060408601356001600160401b03811115611ca7575f5ffd5b611cb388828901611a5d565b9350506060860135915060808601356001600160401b03811115611cd5575f5ffd5b611ce188828901611a5d565b9150509295509295909350565b602081525f61130a6020830184611be5565b5f60208284031215611d10575f5ffd5b81356001600160401b03811115611d25575f5ffd5b8201610100818503121561130a575f5ffd5b5f60208284031215611d47575f5ffd5b5035919050565b5f6001600160401b03821115611d6657611d66611985565b5060051b60200190565b5f82601f830112611d7f575f5ffd5b8135611d8d611a7a82611d4e565b8082825260208201915060208360051b860101925085831115611dae575f5ffd5b602085015b83811015611dd4578035611dc681611805565b835260209283019201611db3565b5095945050505050565b5f82601f830112611ded575f5ffd5b8135611dfb611a7a82611d4e565b8082825260208201915060208360051b860101925085831115611e1c575f5ffd5b602085015b83811015611dd45780356001600160401b03811115611e3e575f5ffd5b86016060818903601f19011215611e53575f5ffd5b611e5b6119c2565b6020820135611e6981611805565b815260408201356001600160401b03811115611e83575f5ffd5b611e928a602083860101611a5d565b6020838101919091526060939093013560408301525084529283019201611e21565b5f60208284031215611ec4575f5ffd5b81356001600160401b03811115611ed9575f5ffd5b82016101008185031215611eeb575f5ffd5b611ef36119e4565b611efc82611819565b815260208201356001600160401b03811115611f16575f5ffd5b611f2286828501611d70565b60208301525060408281013590820152611f3e60608301611819565b606082015260808201356001600160401b03811115611f5b575f5ffd5b611f6786828501611a5d565b608083015250611f7960a08301611819565b60a082015260c08201356001600160401b03811115611f96575f5ffd5b611fa286828501611dde565b60c08301525060e08201356001600160401b03811115611fc0575f5ffd5b611fcc86828501611a5d565b60e083015250949350505050565b5f5f8335601e19843603018112611fef575f5ffd5b8301803591506001600160401b03821115612008575f5ffd5b602001915036819003821315611864575f5ffd5b5f5f8585111561202a575f5ffd5b83861115612036575f5ffd5b5050820193919092039150565b80356001600160e01b03198116906004841015612074576001600160e01b0319600485900360031b81901b82161691505b5092915050565b5f82825180855260208501945060208160051b830101602085015f5b838110156120f657848303601f19018852815180516001600160a01b031684526020808201516060918601829052906120d290860182611be5565b60409283015195909201949094526020988901989093509190910190600101612097565b50909695505050505050565b602081525f61130a602083018461207b565b5f81518060208401855e5f93019283525090919050565b5f6121368285612114565b60609390931b6001600160601b03191683525050601401919050565b5f61130a8284612114565b634e487b7160e01b5f52603260045260245ffd5b5f5f8335601e19843603018112612186575f5ffd5b83016020810192503590506001600160401b038111156121a4575f5ffd5b803603821315611864575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6121f4826121e783611819565b6001600160a01b03169052565b602081810135908301525f61220c6040830183612171565b6101206040860152612223610120860182846121b2565b9150506122336060840184612171565b85830360608701526122468382846121b2565b6080868101359088015260a0808701359088015260c08087013590880152925061227691505060e0840184612171565b85830360e08701526122898382846121b2565b9250505061229b610100840184612171565b8583036101008701526122af8382846121b2565b9695505050505050565b604081525f6122cb60408301856121da565b90508260208301529392505050565b5f602082840312156122ea575f5ffd5b5051919050565b5f8151808452602084019350602083015f5b8281101561232a5781516001600160a01b0316865260209586019590910190600101612303565b5093949350505050565b60018060a01b0381511682525f60208201516060602085015261235a60608501826122f1565b60409384015160ff16949093019390935250919050565b604080825281018390525f6060600585901b830181019083018683605e1936839003015b8882101561241557868503605f1901845282358181126123b3575f5ffd5b8a0180356123c081611805565b6001600160a01b031686526123d86020820182612171565b606060208901526123ed6060890182846121b2565b6040938401359890930197909752509450602093840193929092019160019190910190612395565b5050505082810360208401526122af8185612334565b818382375f9101908152919050565b805160208201516001600160d01b0319811691906006821015611070576001600160d01b031960069290920360031b82901b161692915050565b5f61247f8285612114565b9283525050602001919050565b5f6020828403121561249c575f5ffd5b813561130a81611805565b5f5f8335601e198436030181126124bc575f5ffd5b8301803591506001600160401b038211156124d5575f5ffd5b6020019150600581901b3603821315611864575f5ffd5b61010080825281018a90525f8b6101208301825b8d81101561253057823561251381611805565b6001600160a01b0316825260209283019290910190600101612500565b508b602085015261254c604085018c6001600160a01b03169052565b838103606085015261255f818a8c6121b2565b9250505061257860808301876001600160a01b03169052565b6001600160a01b03851660a08301528360c08301526125a260e08301846001600160a01b03169052565b9b9a5050505050505050505050565b8284823760609190911b6001600160601b0319169101908152601401919050565b6001600160a01b038816815260e0602082018190525f906125f5908301896122f1565b604083018890526001600160a01b0387166060840152828103608084015261261d8187611be5565b6001600160a01b03861660a085015283810360c08501529050612640818561207b565b9a9950505050505050505050565b604081525f61266060408301856121da565b905060018060a01b03831660208301529392505050565b5f82601f830112612686575f5ffd5b8151612694611a7a82611a37565b8181528460208386010111156126a8575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b805165ffffffffffff81168114611110575f5ffd5b5f5f5f5f608085870312156126ec575f5ffd5b84516001600160401b03811115612701575f5ffd5b61270d87828801612677565b94505061271c602086016126c4565b925061272a604086016126c4565b915060608501516001600160401b03811115612744575f5ffd5b61275087828801612677565b91505092959194509250565b634e487b7160e01b5f52601160045260245ffd5b5f600182016127815761278161275c565b5060010190565b5f826127a257634e487b7160e01b5f52601260045260245ffd5b500490565b60ff82811682821603908111156113935761139361275c565b808201808211156113935761139361275c565b828152604060208201525f6127eb6040830184611be5565b949350505050565b5f60208284031215612803575f5ffd5b81516001600160e01b03198116811461130a575f5ffdfe982e06ee6a56dfc0f1ac189a5d23506361ca0a3ce45a9c7b8d33d65d43746a24a26469706673582212200ae1b02abd8de24a69314989a0b7c652ca61d54110496ecdff943b1c340ea77a64736f6c634300081c0033";

type Safe7579LaunchpadConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Safe7579LaunchpadConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Safe7579Launchpad__factory extends ContractFactory {
  constructor(...args: Safe7579LaunchpadConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entryPoint: AddressLike,
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(entryPoint, registry, overrides || {});
  }
  override deploy(
    entryPoint: AddressLike,
    registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(entryPoint, registry, overrides || {}) as Promise<
      Safe7579Launchpad & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Safe7579Launchpad__factory {
    return super.connect(runner) as Safe7579Launchpad__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Safe7579LaunchpadInterface {
    return new Interface(_abi) as Safe7579LaunchpadInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Safe7579Launchpad {
    return new Contract(address, _abi, runner) as unknown as Safe7579Launchpad;
  }
}
