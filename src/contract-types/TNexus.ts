/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type PackedUserOperationStruct = {
  sender: AddressLike;
  nonce: BigNumberish;
  initCode: BytesLike;
  callData: BytesLike;
  accountGasLimits: BytesLike;
  preVerificationGas: BigNumberish;
  gasFees: BytesLike;
  paymasterAndData: BytesLike;
  signature: BytesLike;
};

export type PackedUserOperationStructOutput = [
  sender: string,
  nonce: bigint,
  initCode: string,
  callData: string,
  accountGasLimits: string,
  preVerificationGas: bigint,
  gasFees: string,
  paymasterAndData: string,
  signature: string
] & {
  sender: string;
  nonce: bigint;
  initCode: string;
  callData: string;
  accountGasLimits: string;
  preVerificationGas: bigint;
  gasFees: string;
  paymasterAndData: string;
  signature: string;
};

export interface TNexusInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DOMAIN_SEPARATOR"
      | "accountId"
      | "addDeposit"
      | "checkERC7739Support"
      | "eip712Domain"
      | "emergencyUninstallHook"
      | "entryPoint"
      | "execute"
      | "executeFromExecutor"
      | "executeUserOp"
      | "getActiveHook"
      | "getDeposit"
      | "getExecutorsPaginated"
      | "getFallbackHandlerBySelector"
      | "getImplementation"
      | "getValidatorsPaginated"
      | "hashTypedData"
      | "initializeAccount"
      | "installModule"
      | "isModuleInstalled"
      | "isValidSignature"
      | "nonce"
      | "proxiableUUID"
      | "registry"
      | "setRegistry"
      | "supportsExecutionMode"
      | "supportsModule"
      | "uninstallModule"
      | "upgradeToAndCall"
      | "validateUserOp"
      | "withdrawDepositTo"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ERC7484RegistryConfigured"
      | "EmergencyHookUninstallRequest"
      | "EmergencyHookUninstallRequestReset"
      | "Executed"
      | "ModuleInstalled"
      | "ModuleUninstalled"
      | "TryDelegateCallUnsuccessful"
      | "TryExecuteUnsuccessful"
      | "Upgraded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "DOMAIN_SEPARATOR",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "accountId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addDeposit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "checkERC7739Support",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "eip712Domain",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "emergencyUninstallHook",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "entryPoint",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "executeFromExecutor",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "executeUserOp",
    values: [PackedUserOperationStruct, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getActiveHook",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDeposit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getExecutorsPaginated",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFallbackHandlerBySelector",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getValidatorsPaginated",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "hashTypedData",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeAccount",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "installModule",
    values: [BigNumberish, AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isModuleInstalled",
    values: [BigNumberish, AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidSignature",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "nonce", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "proxiableUUID",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setRegistry",
    values: [AddressLike, AddressLike[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsExecutionMode",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsModule",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "uninstallModule",
    values: [BigNumberish, AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeToAndCall",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "validateUserOp",
    values: [PackedUserOperationStruct, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawDepositTo",
    values: [AddressLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "DOMAIN_SEPARATOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "accountId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addDeposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "checkERC7739Support",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "eip712Domain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "emergencyUninstallHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "entryPoint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeFromExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeUserOp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getActiveHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDeposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getExecutorsPaginated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFallbackHandlerBySelector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getValidatorsPaginated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hashTypedData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeAccount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isModuleInstalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "nonce", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proxiableUUID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsExecutionMode",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uninstallModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "upgradeToAndCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "validateUserOp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawDepositTo",
    data: BytesLike
  ): Result;
}

export namespace ERC7484RegistryConfiguredEvent {
  export type InputTuple = [registry: AddressLike];
  export type OutputTuple = [registry: string];
  export interface OutputObject {
    registry: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EmergencyHookUninstallRequestEvent {
  export type InputTuple = [hook: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [hook: string, timestamp: bigint];
  export interface OutputObject {
    hook: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EmergencyHookUninstallRequestResetEvent {
  export type InputTuple = [hook: AddressLike, timestamp: BigNumberish];
  export type OutputTuple = [hook: string, timestamp: bigint];
  export interface OutputObject {
    hook: string;
    timestamp: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ExecutedEvent {
  export type InputTuple = [
    userOp: PackedUserOperationStruct,
    innerCallRet: BytesLike
  ];
  export type OutputTuple = [
    userOp: PackedUserOperationStructOutput,
    innerCallRet: string
  ];
  export interface OutputObject {
    userOp: PackedUserOperationStructOutput;
    innerCallRet: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ModuleInstalledEvent {
  export type InputTuple = [moduleTypeId: BigNumberish, module: AddressLike];
  export type OutputTuple = [moduleTypeId: bigint, module: string];
  export interface OutputObject {
    moduleTypeId: bigint;
    module: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ModuleUninstalledEvent {
  export type InputTuple = [moduleTypeId: BigNumberish, module: AddressLike];
  export type OutputTuple = [moduleTypeId: bigint, module: string];
  export interface OutputObject {
    moduleTypeId: bigint;
    module: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TryDelegateCallUnsuccessfulEvent {
  export type InputTuple = [callData: BytesLike, result: BytesLike];
  export type OutputTuple = [callData: string, result: string];
  export interface OutputObject {
    callData: string;
    result: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TryExecuteUnsuccessfulEvent {
  export type InputTuple = [callData: BytesLike, result: BytesLike];
  export type OutputTuple = [callData: string, result: string];
  export interface OutputObject {
    callData: string;
    result: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpgradedEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface TNexus extends BaseContract {
  connect(runner?: ContractRunner | null): TNexus;
  waitForDeployment(): Promise<this>;

  interface: TNexusInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DOMAIN_SEPARATOR: TypedContractMethod<[], [string], "view">;

  accountId: TypedContractMethod<[], [string], "view">;

  addDeposit: TypedContractMethod<[], [void], "payable">;

  checkERC7739Support: TypedContractMethod<
    [hash: BytesLike, signature: BytesLike],
    [string],
    "view"
  >;

  eip712Domain: TypedContractMethod<
    [],
    [
      [string, string, string, bigint, string, string, bigint[]] & {
        fields: string;
        name: string;
        version: string;
        chainId: bigint;
        verifyingContract: string;
        salt: string;
        extensions: bigint[];
      }
    ],
    "view"
  >;

  emergencyUninstallHook: TypedContractMethod<
    [hook: AddressLike, deInitData: BytesLike],
    [void],
    "payable"
  >;

  entryPoint: TypedContractMethod<[], [string], "view">;

  execute: TypedContractMethod<
    [mode: BytesLike, executionCalldata: BytesLike],
    [void],
    "payable"
  >;

  executeFromExecutor: TypedContractMethod<
    [mode: BytesLike, executionCalldata: BytesLike],
    [string[]],
    "payable"
  >;

  executeUserOp: TypedContractMethod<
    [userOp: PackedUserOperationStruct, arg1: BytesLike],
    [void],
    "payable"
  >;

  getActiveHook: TypedContractMethod<[], [string], "view">;

  getDeposit: TypedContractMethod<[], [bigint], "view">;

  getExecutorsPaginated: TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;

  getFallbackHandlerBySelector: TypedContractMethod<
    [selector: BytesLike],
    [[string, string]],
    "view"
  >;

  getImplementation: TypedContractMethod<[], [string], "view">;

  getValidatorsPaginated: TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;

  hashTypedData: TypedContractMethod<[structHash: BytesLike], [string], "view">;

  initializeAccount: TypedContractMethod<
    [initData: BytesLike],
    [void],
    "payable"
  >;

  installModule: TypedContractMethod<
    [moduleTypeId: BigNumberish, module: AddressLike, initData: BytesLike],
    [void],
    "payable"
  >;

  isModuleInstalled: TypedContractMethod<
    [
      moduleTypeId: BigNumberish,
      module: AddressLike,
      additionalContext: BytesLike
    ],
    [boolean],
    "view"
  >;

  isValidSignature: TypedContractMethod<
    [hash: BytesLike, signature: BytesLike],
    [string],
    "view"
  >;

  nonce: TypedContractMethod<[key: BigNumberish], [bigint], "view">;

  proxiableUUID: TypedContractMethod<[], [string], "view">;

  registry: TypedContractMethod<[], [string], "view">;

  setRegistry: TypedContractMethod<
    [
      newRegistry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "payable"
  >;

  supportsExecutionMode: TypedContractMethod<
    [mode: BytesLike],
    [boolean],
    "view"
  >;

  supportsModule: TypedContractMethod<
    [moduleTypeId: BigNumberish],
    [boolean],
    "view"
  >;

  uninstallModule: TypedContractMethod<
    [moduleTypeId: BigNumberish, module: AddressLike, deInitData: BytesLike],
    [void],
    "payable"
  >;

  upgradeToAndCall: TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  validateUserOp: TypedContractMethod<
    [
      op: PackedUserOperationStruct,
      userOpHash: BytesLike,
      missingAccountFunds: BigNumberish
    ],
    [bigint],
    "nonpayable"
  >;

  withdrawDepositTo: TypedContractMethod<
    [to: AddressLike, amount: BigNumberish],
    [void],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DOMAIN_SEPARATOR"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "accountId"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "addDeposit"
  ): TypedContractMethod<[], [void], "payable">;
  getFunction(
    nameOrSignature: "checkERC7739Support"
  ): TypedContractMethod<
    [hash: BytesLike, signature: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "eip712Domain"
  ): TypedContractMethod<
    [],
    [
      [string, string, string, bigint, string, string, bigint[]] & {
        fields: string;
        name: string;
        version: string;
        chainId: bigint;
        verifyingContract: string;
        salt: string;
        extensions: bigint[];
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "emergencyUninstallHook"
  ): TypedContractMethod<
    [hook: AddressLike, deInitData: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "entryPoint"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "execute"
  ): TypedContractMethod<
    [mode: BytesLike, executionCalldata: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "executeFromExecutor"
  ): TypedContractMethod<
    [mode: BytesLike, executionCalldata: BytesLike],
    [string[]],
    "payable"
  >;
  getFunction(
    nameOrSignature: "executeUserOp"
  ): TypedContractMethod<
    [userOp: PackedUserOperationStruct, arg1: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "getActiveHook"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getDeposit"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getExecutorsPaginated"
  ): TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "getFallbackHandlerBySelector"
  ): TypedContractMethod<[selector: BytesLike], [[string, string]], "view">;
  getFunction(
    nameOrSignature: "getImplementation"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getValidatorsPaginated"
  ): TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "hashTypedData"
  ): TypedContractMethod<[structHash: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "initializeAccount"
  ): TypedContractMethod<[initData: BytesLike], [void], "payable">;
  getFunction(
    nameOrSignature: "installModule"
  ): TypedContractMethod<
    [moduleTypeId: BigNumberish, module: AddressLike, initData: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "isModuleInstalled"
  ): TypedContractMethod<
    [
      moduleTypeId: BigNumberish,
      module: AddressLike,
      additionalContext: BytesLike
    ],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "isValidSignature"
  ): TypedContractMethod<
    [hash: BytesLike, signature: BytesLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "nonce"
  ): TypedContractMethod<[key: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "proxiableUUID"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "registry"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "setRegistry"
  ): TypedContractMethod<
    [
      newRegistry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "supportsExecutionMode"
  ): TypedContractMethod<[mode: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "supportsModule"
  ): TypedContractMethod<[moduleTypeId: BigNumberish], [boolean], "view">;
  getFunction(
    nameOrSignature: "uninstallModule"
  ): TypedContractMethod<
    [moduleTypeId: BigNumberish, module: AddressLike, deInitData: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "upgradeToAndCall"
  ): TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "validateUserOp"
  ): TypedContractMethod<
    [
      op: PackedUserOperationStruct,
      userOpHash: BytesLike,
      missingAccountFunds: BigNumberish
    ],
    [bigint],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "withdrawDepositTo"
  ): TypedContractMethod<
    [to: AddressLike, amount: BigNumberish],
    [void],
    "payable"
  >;

  getEvent(
    key: "ERC7484RegistryConfigured"
  ): TypedContractEvent<
    ERC7484RegistryConfiguredEvent.InputTuple,
    ERC7484RegistryConfiguredEvent.OutputTuple,
    ERC7484RegistryConfiguredEvent.OutputObject
  >;
  getEvent(
    key: "EmergencyHookUninstallRequest"
  ): TypedContractEvent<
    EmergencyHookUninstallRequestEvent.InputTuple,
    EmergencyHookUninstallRequestEvent.OutputTuple,
    EmergencyHookUninstallRequestEvent.OutputObject
  >;
  getEvent(
    key: "EmergencyHookUninstallRequestReset"
  ): TypedContractEvent<
    EmergencyHookUninstallRequestResetEvent.InputTuple,
    EmergencyHookUninstallRequestResetEvent.OutputTuple,
    EmergencyHookUninstallRequestResetEvent.OutputObject
  >;
  getEvent(
    key: "Executed"
  ): TypedContractEvent<
    ExecutedEvent.InputTuple,
    ExecutedEvent.OutputTuple,
    ExecutedEvent.OutputObject
  >;
  getEvent(
    key: "ModuleInstalled"
  ): TypedContractEvent<
    ModuleInstalledEvent.InputTuple,
    ModuleInstalledEvent.OutputTuple,
    ModuleInstalledEvent.OutputObject
  >;
  getEvent(
    key: "ModuleUninstalled"
  ): TypedContractEvent<
    ModuleUninstalledEvent.InputTuple,
    ModuleUninstalledEvent.OutputTuple,
    ModuleUninstalledEvent.OutputObject
  >;
  getEvent(
    key: "TryDelegateCallUnsuccessful"
  ): TypedContractEvent<
    TryDelegateCallUnsuccessfulEvent.InputTuple,
    TryDelegateCallUnsuccessfulEvent.OutputTuple,
    TryDelegateCallUnsuccessfulEvent.OutputObject
  >;
  getEvent(
    key: "TryExecuteUnsuccessful"
  ): TypedContractEvent<
    TryExecuteUnsuccessfulEvent.InputTuple,
    TryExecuteUnsuccessfulEvent.OutputTuple,
    TryExecuteUnsuccessfulEvent.OutputObject
  >;
  getEvent(
    key: "Upgraded"
  ): TypedContractEvent<
    UpgradedEvent.InputTuple,
    UpgradedEvent.OutputTuple,
    UpgradedEvent.OutputObject
  >;

  filters: {
    "ERC7484RegistryConfigured(address)": TypedContractEvent<
      ERC7484RegistryConfiguredEvent.InputTuple,
      ERC7484RegistryConfiguredEvent.OutputTuple,
      ERC7484RegistryConfiguredEvent.OutputObject
    >;
    ERC7484RegistryConfigured: TypedContractEvent<
      ERC7484RegistryConfiguredEvent.InputTuple,
      ERC7484RegistryConfiguredEvent.OutputTuple,
      ERC7484RegistryConfiguredEvent.OutputObject
    >;

    "EmergencyHookUninstallRequest(address,uint256)": TypedContractEvent<
      EmergencyHookUninstallRequestEvent.InputTuple,
      EmergencyHookUninstallRequestEvent.OutputTuple,
      EmergencyHookUninstallRequestEvent.OutputObject
    >;
    EmergencyHookUninstallRequest: TypedContractEvent<
      EmergencyHookUninstallRequestEvent.InputTuple,
      EmergencyHookUninstallRequestEvent.OutputTuple,
      EmergencyHookUninstallRequestEvent.OutputObject
    >;

    "EmergencyHookUninstallRequestReset(address,uint256)": TypedContractEvent<
      EmergencyHookUninstallRequestResetEvent.InputTuple,
      EmergencyHookUninstallRequestResetEvent.OutputTuple,
      EmergencyHookUninstallRequestResetEvent.OutputObject
    >;
    EmergencyHookUninstallRequestReset: TypedContractEvent<
      EmergencyHookUninstallRequestResetEvent.InputTuple,
      EmergencyHookUninstallRequestResetEvent.OutputTuple,
      EmergencyHookUninstallRequestResetEvent.OutputObject
    >;

    "Executed(tuple,bytes)": TypedContractEvent<
      ExecutedEvent.InputTuple,
      ExecutedEvent.OutputTuple,
      ExecutedEvent.OutputObject
    >;
    Executed: TypedContractEvent<
      ExecutedEvent.InputTuple,
      ExecutedEvent.OutputTuple,
      ExecutedEvent.OutputObject
    >;

    "ModuleInstalled(uint256,address)": TypedContractEvent<
      ModuleInstalledEvent.InputTuple,
      ModuleInstalledEvent.OutputTuple,
      ModuleInstalledEvent.OutputObject
    >;
    ModuleInstalled: TypedContractEvent<
      ModuleInstalledEvent.InputTuple,
      ModuleInstalledEvent.OutputTuple,
      ModuleInstalledEvent.OutputObject
    >;

    "ModuleUninstalled(uint256,address)": TypedContractEvent<
      ModuleUninstalledEvent.InputTuple,
      ModuleUninstalledEvent.OutputTuple,
      ModuleUninstalledEvent.OutputObject
    >;
    ModuleUninstalled: TypedContractEvent<
      ModuleUninstalledEvent.InputTuple,
      ModuleUninstalledEvent.OutputTuple,
      ModuleUninstalledEvent.OutputObject
    >;

    "TryDelegateCallUnsuccessful(bytes,bytes)": TypedContractEvent<
      TryDelegateCallUnsuccessfulEvent.InputTuple,
      TryDelegateCallUnsuccessfulEvent.OutputTuple,
      TryDelegateCallUnsuccessfulEvent.OutputObject
    >;
    TryDelegateCallUnsuccessful: TypedContractEvent<
      TryDelegateCallUnsuccessfulEvent.InputTuple,
      TryDelegateCallUnsuccessfulEvent.OutputTuple,
      TryDelegateCallUnsuccessfulEvent.OutputObject
    >;

    "TryExecuteUnsuccessful(bytes,bytes)": TypedContractEvent<
      TryExecuteUnsuccessfulEvent.InputTuple,
      TryExecuteUnsuccessfulEvent.OutputTuple,
      TryExecuteUnsuccessfulEvent.OutputObject
    >;
    TryExecuteUnsuccessful: TypedContractEvent<
      TryExecuteUnsuccessfulEvent.InputTuple,
      TryExecuteUnsuccessfulEvent.OutputTuple,
      TryExecuteUnsuccessfulEvent.OutputObject
    >;

    "Upgraded(address)": TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
    Upgraded: TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
  };
}
