/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type BootstrapConfigStruct = { module: AddressLike; data: BytesLike };

export type BootstrapConfigStructOutput = [module: string, data: string] & {
  module: string;
  data: string;
};

export interface NexusBootstrapInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "eip712Domain"
      | "getActiveHook"
      | "getExecutorsPaginated"
      | "getFallbackHandlerBySelector"
      | "getInitNexusCalldata"
      | "getInitNexusScopedCalldata"
      | "getInitNexusWithSingleValidatorCalldata"
      | "getValidatorsPaginated"
      | "initNexus"
      | "initNexusScoped"
      | "initNexusWithSingleValidator"
      | "registry"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "ERC7484RegistryConfigured"
      | "ModuleInstalled"
      | "ModuleUninstalled"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "eip712Domain",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getActiveHook",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getExecutorsPaginated",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFallbackHandlerBySelector",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitNexusCalldata",
    values: [
      BootstrapConfigStruct[],
      BootstrapConfigStruct[],
      BootstrapConfigStruct,
      BootstrapConfigStruct[],
      AddressLike,
      AddressLike[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitNexusScopedCalldata",
    values: [
      BootstrapConfigStruct[],
      BootstrapConfigStruct,
      AddressLike,
      AddressLike[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getInitNexusWithSingleValidatorCalldata",
    values: [BootstrapConfigStruct, AddressLike, AddressLike[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getValidatorsPaginated",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initNexus",
    values: [
      BootstrapConfigStruct[],
      BootstrapConfigStruct[],
      BootstrapConfigStruct,
      BootstrapConfigStruct[],
      AddressLike,
      AddressLike[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initNexusScoped",
    values: [
      BootstrapConfigStruct[],
      BootstrapConfigStruct,
      AddressLike,
      AddressLike[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initNexusWithSingleValidator",
    values: [AddressLike, BytesLike, AddressLike, AddressLike[], BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "registry", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "eip712Domain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getActiveHook",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExecutorsPaginated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFallbackHandlerBySelector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitNexusCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitNexusScopedCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInitNexusWithSingleValidatorCalldata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getValidatorsPaginated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initNexus", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initNexusScoped",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initNexusWithSingleValidator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result;
}

export namespace ERC7484RegistryConfiguredEvent {
  export type InputTuple = [registry: AddressLike];
  export type OutputTuple = [registry: string];
  export interface OutputObject {
    registry: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ModuleInstalledEvent {
  export type InputTuple = [moduleTypeId: BigNumberish, module: AddressLike];
  export type OutputTuple = [moduleTypeId: bigint, module: string];
  export interface OutputObject {
    moduleTypeId: bigint;
    module: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ModuleUninstalledEvent {
  export type InputTuple = [moduleTypeId: BigNumberish, module: AddressLike];
  export type OutputTuple = [moduleTypeId: bigint, module: string];
  export interface OutputObject {
    moduleTypeId: bigint;
    module: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface NexusBootstrap extends BaseContract {
  connect(runner?: ContractRunner | null): NexusBootstrap;
  waitForDeployment(): Promise<this>;

  interface: NexusBootstrapInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  eip712Domain: TypedContractMethod<
    [],
    [
      [string, string, string, bigint, string, string, bigint[]] & {
        fields: string;
        name: string;
        version: string;
        chainId: bigint;
        verifyingContract: string;
        salt: string;
        extensions: bigint[];
      }
    ],
    "view"
  >;

  getActiveHook: TypedContractMethod<[], [string], "view">;

  getExecutorsPaginated: TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;

  getFallbackHandlerBySelector: TypedContractMethod<
    [selector: BytesLike],
    [[string, string]],
    "view"
  >;

  getInitNexusCalldata: TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      executors: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      fallbacks: BootstrapConfigStruct[],
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [string],
    "view"
  >;

  getInitNexusScopedCalldata: TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [string],
    "view"
  >;

  getInitNexusWithSingleValidatorCalldata: TypedContractMethod<
    [
      validator: BootstrapConfigStruct,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [string],
    "view"
  >;

  getValidatorsPaginated: TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;

  initNexus: TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      executors: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      fallbacks: BootstrapConfigStruct[],
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  initNexusScoped: TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  initNexusWithSingleValidator: TypedContractMethod<
    [
      validator: AddressLike,
      data: BytesLike,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  registry: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "eip712Domain"
  ): TypedContractMethod<
    [],
    [
      [string, string, string, bigint, string, string, bigint[]] & {
        fields: string;
        name: string;
        version: string;
        chainId: bigint;
        verifyingContract: string;
        salt: string;
        extensions: bigint[];
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getActiveHook"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getExecutorsPaginated"
  ): TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "getFallbackHandlerBySelector"
  ): TypedContractMethod<[selector: BytesLike], [[string, string]], "view">;
  getFunction(
    nameOrSignature: "getInitNexusCalldata"
  ): TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      executors: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      fallbacks: BootstrapConfigStruct[],
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getInitNexusScopedCalldata"
  ): TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getInitNexusWithSingleValidatorCalldata"
  ): TypedContractMethod<
    [
      validator: BootstrapConfigStruct,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getValidatorsPaginated"
  ): TypedContractMethod<
    [cursor: AddressLike, size: BigNumberish],
    [[string[], string] & { array: string[]; next: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "initNexus"
  ): TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      executors: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      fallbacks: BootstrapConfigStruct[],
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initNexusScoped"
  ): TypedContractMethod<
    [
      validators: BootstrapConfigStruct[],
      hook: BootstrapConfigStruct,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initNexusWithSingleValidator"
  ): TypedContractMethod<
    [
      validator: AddressLike,
      data: BytesLike,
      registry: AddressLike,
      attesters: AddressLike[],
      threshold: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "registry"
  ): TypedContractMethod<[], [string], "view">;

  getEvent(
    key: "ERC7484RegistryConfigured"
  ): TypedContractEvent<
    ERC7484RegistryConfiguredEvent.InputTuple,
    ERC7484RegistryConfiguredEvent.OutputTuple,
    ERC7484RegistryConfiguredEvent.OutputObject
  >;
  getEvent(
    key: "ModuleInstalled"
  ): TypedContractEvent<
    ModuleInstalledEvent.InputTuple,
    ModuleInstalledEvent.OutputTuple,
    ModuleInstalledEvent.OutputObject
  >;
  getEvent(
    key: "ModuleUninstalled"
  ): TypedContractEvent<
    ModuleUninstalledEvent.InputTuple,
    ModuleUninstalledEvent.OutputTuple,
    ModuleUninstalledEvent.OutputObject
  >;

  filters: {
    "ERC7484RegistryConfigured(address)": TypedContractEvent<
      ERC7484RegistryConfiguredEvent.InputTuple,
      ERC7484RegistryConfiguredEvent.OutputTuple,
      ERC7484RegistryConfiguredEvent.OutputObject
    >;
    ERC7484RegistryConfigured: TypedContractEvent<
      ERC7484RegistryConfiguredEvent.InputTuple,
      ERC7484RegistryConfiguredEvent.OutputTuple,
      ERC7484RegistryConfiguredEvent.OutputObject
    >;

    "ModuleInstalled(uint256,address)": TypedContractEvent<
      ModuleInstalledEvent.InputTuple,
      ModuleInstalledEvent.OutputTuple,
      ModuleInstalledEvent.OutputObject
    >;
    ModuleInstalled: TypedContractEvent<
      ModuleInstalledEvent.InputTuple,
      ModuleInstalledEvent.OutputTuple,
      ModuleInstalledEvent.OutputObject
    >;

    "ModuleUninstalled(uint256,address)": TypedContractEvent<
      ModuleUninstalledEvent.InputTuple,
      ModuleUninstalledEvent.OutputTuple,
      ModuleUninstalledEvent.OutputObject
    >;
    ModuleUninstalled: TypedContractEvent<
      ModuleUninstalledEvent.InputTuple,
      ModuleUninstalledEvent.OutputTuple,
      ModuleUninstalledEvent.OutputObject
    >;
  };
}
