{"abi":[{"type":"function","name":"accountId","inputs":[],"outputs":[{"name":"accountImplementationId","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"emergencyUninstallHook","inputs":[{"name":"data","type":"tuple","internalType":"struct EmergencyUninstall","components":[{"name":"hook","type":"address","internalType":"address"},{"name":"hookType","type":"uint256","internalType":"uint256"},{"name":"deInitData","type":"bytes","internalType":"bytes"},{"name":"nonce","type":"uint256","internalType":"uint256"}]},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"execute","inputs":[{"name":"mode","type":"bytes32","internalType":"ModeCode"},{"name":"executionCalldata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"executeFromExecutor","inputs":[{"name":"mode","type":"bytes32","internalType":"ModeCode"},{"name":"executionCalldata","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"returnDatas","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"getActiveHook","inputs":[],"outputs":[{"name":"hook","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getExecutorsPaginated","inputs":[{"name":"cursor","type":"address","internalType":"address"},{"name":"size","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"array","type":"address[]","internalType":"address[]"},{"name":"next","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getFallbackHandlerBySelector","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bytes1","internalType":"CallType"},{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"safe","type":"address","internalType":"address"},{"name":"validator","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPrevalidationHook","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"hook","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getSafeOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"entryPoint","type":"address","internalType":"address"}],"outputs":[{"name":"operationData","type":"bytes","internalType":"bytes"},{"name":"validAfter","type":"uint48","internalType":"uint48"},{"name":"validUntil","type":"uint48","internalType":"uint48"},{"name":"signatures","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getValidatorsPaginated","inputs":[{"name":"cursor","type":"address","internalType":"address"},{"name":"pageSize","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"array","type":"address[]","internalType":"address[]"},{"name":"next","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initializeAccount","inputs":[{"name":"modules","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"},{"name":"moduleType","type":"uint256","internalType":"uint256"}]},{"name":"registryInit","type":"tuple","internalType":"struct RegistryInit","components":[{"name":"registry","type":"address","internalType":"contract IERC7484"},{"name":"attesters","type":"address[]","internalType":"address[]"},{"name":"threshold","type":"uint8","internalType":"uint8"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initializeAccountWithValidators","inputs":[{"name":"validators","type":"tuple[]","internalType":"struct ModuleInit[]","components":[{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"},{"name":"moduleType","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"installModule","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"initData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isModuleInstalled","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"additionalContext","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidSignature","inputs":[{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"magicValue","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"setRegistry","inputs":[{"name":"registry","type":"address","internalType":"contract IERC7484"},{"name":"attesters","type":"address[]","internalType":"address[]"},{"name":"threshold","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsExecutionMode","inputs":[{"name":"encodedMode","type":"bytes32","internalType":"ModeCode"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"supportsModule","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"uninstallModule","inputs":[{"name":"moduleType","type":"uint256","internalType":"uint256"},{"name":"module","type":"address","internalType":"address"},{"name":"deInitData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"packedValidSig","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"ERC7484RegistryConfigured","inputs":[{"name":"smartAccount","type":"address","indexed":true,"internalType":"address"},{"name":"registry","type":"address","indexed":true,"internalType":"contract IERC7484"}],"anonymous":false},{"type":"event","name":"EmergencyHookUninstallRequest","inputs":[{"name":"hook","type":"address","indexed":false,"internalType":"address"},{"name":"time","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"EmergencyHookUninstallRequestReset","inputs":[{"name":"hook","type":"address","indexed":false,"internalType":"address"},{"name":"time","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ModuleInstalled","inputs":[{"name":"moduleTypeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"module","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ModuleUninstalled","inputs":[{"name":"moduleTypeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"module","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"EmergencyTimeLockNotExpired","inputs":[]},{"type":"error","name":"EmergencyUninstallSigError","inputs":[]},{"type":"error","name":"FallbackInstalled","inputs":[{"name":"msgSig","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"HookAlreadyInstalled","inputs":[{"name":"currentHook","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidCallType","inputs":[{"name":"callType","type":"bytes1","internalType":"CallType"}]},{"type":"error","name":"InvalidFallbackHandler","inputs":[{"name":"msgSig","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"InvalidHookType","inputs":[]},{"type":"error","name":"InvalidInput","inputs":[]},{"type":"error","name":"InvalidModule","inputs":[{"name":"module","type":"address","internalType":"address"}]},{"type":"error","name":"InvalidModuleType","inputs":[{"name":"module","type":"address","internalType":"address"},{"name":"moduleType","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidNonce","inputs":[]},{"type":"error","name":"ModuleNotInstalled","inputs":[{"name":"module","type":"address","internalType":"address"},{"name":"moduleType","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NoFallbackHandler","inputs":[{"name":"msgSig","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"PreValidationHookAlreadyInstalled","inputs":[{"name":"currentHook","type":"address","internalType":"address"},{"name":"moduleType","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"UnsupportedCallType","inputs":[{"name":"callType","type":"bytes1","internalType":"CallType"}]},{"type":"error","name":"UnsupportedExecType","inputs":[{"name":"execType","type":"bytes1","internalType":"ExecType"}]},{"type":"error","name":"UnsupportedModuleType","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accountId()":"9cfd7cff","domainSeparator()":"f698da25","emergencyUninstallHook((address,uint256,bytes,uint256),bytes)":"5bfeadbb","execute(bytes32,bytes)":"e9ae5c53","executeFromExecutor(bytes32,bytes)":"d691c964","getActiveHook()":"0a664dba","getExecutorsPaginated(address,uint256)":"ea5f61d0","getFallbackHandlerBySelector(bytes4)":"481ddd23","getNonce(address,address)":"d828435d","getPrevalidationHook(uint256)":"236b58a1","getSafeOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),address)":"55d559f4","getValidatorsPaginated(address,uint256)":"5faac46b","initializeAccount((address,bytes,uint256)[],(address,address[],uint8))":"3065ca43","initializeAccountWithValidators((address,bytes,uint256)[])":"3c4ddc9d","installModule(uint256,address,bytes)":"9517e29f","isModuleInstalled(uint256,address,bytes)":"112d3a7d","isValidSignature(bytes32,bytes)":"1626ba7e","setRegistry(address,address[],uint8)":"eab77e17","supportsExecutionMode(bytes32)":"d03c7914","supportsModule(uint256)":"f2dc691d","uninstallModule(uint256,address,bytes)":"a71763a8","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmergencyTimeLockNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyUninstallSigError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"FallbackInstalled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currentHook\",\"type\":\"address\"}],\"name\":\"HookAlreadyInstalled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"CallType\",\"name\":\"callType\",\"type\":\"bytes1\"}],\"name\":\"InvalidCallType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"InvalidFallbackHandler\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidHookType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInput\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"InvalidModule\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"InvalidModuleType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"ModuleNotInstalled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"msgSig\",\"type\":\"bytes4\"}],\"name\":\"NoFallbackHandler\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currentHook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"PreValidationHookAlreadyInstalled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"CallType\",\"name\":\"callType\",\"type\":\"bytes1\"}],\"name\":\"UnsupportedCallType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ExecType\",\"name\":\"execType\",\"type\":\"bytes1\"}],\"name\":\"UnsupportedExecType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"UnsupportedModuleType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC7484\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"ERC7484RegistryConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"EmergencyHookUninstallRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"EmergencyHookUninstallRequestReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleInstalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleUninstalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"hookType\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deInitData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"struct EmergencyUninstall\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"emergencyUninstallHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ModeCode\",\"name\":\"mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ModeCode\",\"name\":\"mode\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"}],\"name\":\"executeFromExecutor\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"returnDatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cursor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"name\":\"getExecutorsPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getFallbackHandlerBySelector\",\"outputs\":[{\"internalType\":\"CallType\",\"name\":\"\",\"type\":\"bytes1\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"getPrevalidationHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"}],\"name\":\"getSafeOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"operationData\",\"type\":\"bytes\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cursor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"getValidatorsPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"modules\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"contract IERC7484\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"internalType\":\"struct RegistryInit\",\"name\":\"registryInit\",\"type\":\"tuple\"}],\"name\":\"initializeAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"internalType\":\"struct ModuleInit[]\",\"name\":\"validators\",\"type\":\"tuple[]\"}],\"name\":\"initializeAccountWithValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"installModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"additionalContext\",\"type\":\"bytes\"}],\"name\":\"isModuleInstalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC7484\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ModeCode\",\"name\":\"encodedMode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deInitData\",\"type\":\"bytes\"}],\"name\":\"uninstallModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"packedValidSig\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"rhinestone | zeroknots.eth, Konrad Kopp (@kopy-kat)\",\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account the accountId should be structured like so:        \\\"vendorname.accountname.semver\\\"\"}},\"emergencyUninstallHook((address,uint256,bytes,uint256),bytes)\":{\"details\":\"Allows uninstalling hooks without triggering hooks during the uninstall process,      secured by a timelock. Usable on regular hooks and prevalidation hooks\",\"params\":{\"data\":\"EmergencyUninstall struct\",\"signature\":\"signature of the data, to be validated on a validator module or by      safe.checkSignatures if no validator module is supplied/installed\"}},\"execute(bytes32,bytes)\":{\"details\":\"Executes a transaction on behalf of the Safe account.         This function is intended to be called by ERC-4337 EntryPoint.solIf a global hook and/or selector hook is set, it will be calledAccessControl: only Self of Entrypoint can install modules Safe7579 supports the following feature set:    CallTypes:             - CALLTYPE_SINGLE             - CALLTYPE_BATCH             - CALLTYPE_DELEGATECALL    ExecTypes:             - EXECTYPE_DEFAULT (revert if not successful)             - EXECTYPE_TRY    If a different mode is selected, this function will revert\",\"params\":{\"executionCalldata\":\"The encoded execution call data\",\"mode\":\"The encoded execution mode of the transaction. See ModeLib.sol for details\"}},\"executeFromExecutor(bytes32,bytes)\":{\"details\":\"Executes a transaction on behalf of the Safe account.         This function is intended to be called by executor modulesIf a global hook and/or selector hook is set, it will be calledAccessControl: only enabled executor modules Safe7579 supports the following feature set:    CallTypes:             - CALLTYPE_SINGLE             - CALLTYPE_BATCH             - CALLTYPE_DELEGATECALL    ExecTypes:             - EXECTYPE_DEFAULT (revert if not successful)             - EXECTYPE_TRY    If a different mode is selected, this function will revert\",\"params\":{\"executionCalldata\":\"The encoded execution call data\",\"mode\":\"The encoded execution mode of the transaction. See ModeLib.sol for details\"}},\"getFallbackHandlerBySelector(bytes4)\":{\"params\":{\"selector\":\"the function selector\"}},\"getNonce(address,address)\":{\"params\":{\"safe\":\"address of safe account\",\"validator\":\"ERC7579 validator to encode\"}},\"getPrevalidationHook(uint256)\":{\"params\":{\"moduleType\":\"the prevalidation hook type\"}},\"initializeAccount((address,bytes,uint256)[],(address,address[],uint8))\":{\"params\":{\"modules\":\"Array of modules to initialize with their respective types\",\"registryInit\":\"(OPTIONAL) registry, attesters and threshold for IERC7484 Registry                    If not provided, the registry will be set to the zero address, and no                    registry checks will be performed\"}},\"initializeAccountWithValidators((address,bytes,uint256)[])\":{\"details\":\"it will initialize the SentinelList4337 list for validators, and sstore all validatorsSince this function has to be 4337 compliant (storage access), only validator storage is  acccessNote: this function DOES NOT call onInstall() on the validator modules or emit ModuleInstalled events. this has to be done by the launchpad\"},\"installModule(uint256,address,bytes)\":{\"details\":\"The module has to be initialized from msg.sender == SafeProxy, we thus use a    delegatecall to DCUtil, which calls the onInstall/onUninstall function on the ERC7579    module and emits the ModuleInstall/ModuleUnintall eventsAccessControl: only Self of Entrypoint can install modulesIf the safe set a registry, ERC7484 registry will be queried before installingIf a global hook and/or selector hook is set, it will be called\",\"params\":{\"initData\":\"arbitrary data that may be required on the module during `onInstall` initialization.\",\"module\":\"the module address\",\"moduleType\":\"the module type ID according the ERC-7579 spec                   Note: MULTITYPE_MODULE (uint(0)) is a special type to install a module with                         multiple types\"}},\"isModuleInstalled(uint256,address,bytes)\":{\"params\":{\"additionalContext\":\"additional context data that the smart account may interpret to                          identifiy conditions under which the module is installed.                          usually this is not necessary, but for some special hooks that                          are stored in mappings, this param might be needed\",\"module\":\"the module address\",\"moduleType\":\"the module type ID according the ERC-7579 spec      Note: keep in mind that some contracts can be multiple module types at the same time. It            thus may be necessary to query multiple module types\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"data\":\"abi.encodePacked(address validationModule, bytes signatures)\",\"hash\":\"message hash of ERC1271 request\"}},\"setRegistry(address,address[],uint8)\":{\"params\":{\"attesters\":\"list of attesters\",\"registry\":\"IERC7484 registry\",\"threshold\":\"number of attesters required\"}},\"supportsExecutionMode(bytes32)\":{\"params\":{\"encodedMode\":\"the encoded mode\"}},\"supportsModule(uint256)\":{\"params\":{\"moduleTypeId\":\"the module type ID according the ERC-7579 spec\"}},\"uninstallModule(uint256,address,bytes)\":{\"details\":\"The module has to be initialized from msg.sender == SafeProxy, we thus use a    delegatecall to DCUtil, which calls the onInstall/onUninstall function on the ERC7579    module and emits the ModuleInstall/ModuleUnintall eventsAccessControl: only Self of Entrypoint can install modulesIf a global hook and/or selector hook is set, it will be called\",\"params\":{\"deInitData\":\"arbitrary data that may be required on the module during `onUninstall` de-initialization.\",\"module\":\"the module address\",\"moduleType\":\"the module type ID according the ERC-7579 spec\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"expects that a ERC7579 validator module is encoded within the UserOp nonce.         if no validator module is provided, it will fallback to validate the transaction with         Safe's signers\"}},\"title\":\"ERC7579 Adapter for Safe accounts. creates full ERC7579 compliance to Safe accounts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyUninstallHook((address,uint256,bytes,uint256),bytes)\":{\"notice\":\"Emergency uninstall a hook module\"},\"getActiveHook()\":{\"notice\":\"Get the current active global hook\"},\"getFallbackHandlerBySelector(bytes4)\":{\"notice\":\"Get the current active fallback handler and call type for the given selector\"},\"getNonce(address,address)\":{\"notice\":\"Safe7579 is using validator selection encoding in the userop nonce. to make it easier for SDKs / devs to integrate, this function can be called to get the next nonce for a specific validator\"},\"getPrevalidationHook(uint256)\":{\"notice\":\"Get the current active prevalidation hook for the given module type\"},\"initializeAccount((address,bytes,uint256)[],(address,address[],uint8))\":{\"notice\":\"This function can be called by the Launchpad.initSafe7579() or by already existing Safes that want to use Safe7579 if this is called by the Launchpad, it is expected that launchpadValidators() was called previously, and the param validators is empty\"},\"initializeAccountWithValidators((address,bytes,uint256)[])\":{\"notice\":\"This function is intended to be called by Launchpad.validateUserOp()\"},\"installModule(uint256,address,bytes)\":{\"notice\":\"Installs a 7579 Module of a certain type on the smart account\"},\"isModuleInstalled(uint256,address,bytes)\":{\"notice\":\"Function to check if the account has a certain module installed\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Will use Safe's signed messages or checkSignatures features or ERC7579 validation modules if no signature is provided, it makes use of Safe's signedMessages if address(0) or a non-installed validator module is provided, it will use Safe's checkSignatures if a valid validator module is provided, it will use the module's validateUserOp function\"},\"setRegistry(address,address[],uint8)\":{\"notice\":\"Configure the Safe7579 with a IERC7484 registry\"},\"supportsExecutionMode(bytes32)\":{\"notice\":\"Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)\"},\"supportsModule(uint256)\":{\"notice\":\"Function to check if the account supports installation of a certain module type Id\"},\"uninstallModule(uint256,address,bytes)\":{\"notice\":\"Uninstalls a Module of a certain type on the smart account.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"ERC4337 v0.7 validation function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ISafe7579.sol\":\"ISafe7579\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":module-bases/=node_modules/@rhinestone/module-bases/src/\",\":modulekit/=node_modules/@rhinestone/modulekit/src/\",\":sentinellist/=node_modules/@rhinestone/sentinellist/src/\",\":solady/=node_modules/solady/src/\",\":solarray/=node_modules/solarray/src/\"]},\"sources\":{\"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x05f3bf9ea35b21e3eb64f55eabc2cf866612768e5295419ebc455ab5d6f45c1b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://80f75aa39a962bf7003a6b3ab4988b5bbf7660b3715cbcbb9708c0ffe14559ac\",\"dweb:/ipfs/QmPU93JhXVA1ZVXcoznVCKmCZF1hkQXcScC1kw2KuwuFSn\"]},\"src/ISafe7579.sol\":{\"keccak256\":\"0x5e2cbb0da6cf796d59992cf49d0a0ada0eee0309ad35f30a26abf0248b755540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5291913b39810be5c9738e5b8411f220eb041748c2b2b76ca35ccb8d57a9abd\",\"dweb:/ipfs/QmW83X7Uk5XcEvUz8Lq1MGbbuQonkdU3A94MFYHZTjKoMd\"]},\"src/interfaces/IERC7484.sol\":{\"keccak256\":\"0xac70106497cbca5b521ad3c27bfa14721aea86bf6f11e331388778f36cf669ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef31872d4e5d1d589cbadea178651df9991dcf89770fcb5119752c6d6d4bf1c\",\"dweb:/ipfs/QmbYTruqW1PDfnmJCqij4mRixMetCf1P5tc8K67MJtGA6F\"]},\"src/interfaces/IERC7579Account.sol\":{\"keccak256\":\"0xc388e47f74f872e342e72d8bd57b428c6910b9e38c50bd3512d9069291dd041d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05971661f97add5befb5e89c693add53624bc63166255d1cda9ae4a1c423c47d\",\"dweb:/ipfs/QmVEuEvUadDkPDaGDrFDYh5D4pCvn7JyHhGJThB3UaGJxe\"]},\"src/interfaces/ISafeOp.sol\":{\"keccak256\":\"0x1f001973f472988b1f5c502ccb6f8e59f2d920f2bf70728e616747d8d8d761fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74abf8b7be99682d91511aeed0a7d2a09cfe3aa2d72d026e573fc5bf56c479b2\",\"dweb:/ipfs/QmdHWrassTuBH5TVjmcazaG4tUvZJEVSyY1vY8gf6FGXnc\"]},\"src/lib/ModeLib.sol\":{\"keccak256\":\"0xa1bafca421213265c5b22f3d3b2858b0a12366f25f9b0d3b53f14cb9d3fe0e3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93bc4c82cbeaf62e2d23c79c4e1403524da0d76fe307a62cc9272414f628a088\",\"dweb:/ipfs/QmZFtaCwMEwPuy6HCUS9JcU2KoT2NpZczLdK7D2vqLUbAH\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"EmergencyTimeLockNotExpired"},{"inputs":[],"type":"error","name":"EmergencyUninstallSigError"},{"inputs":[{"internalType":"bytes4","name":"msgSig","type":"bytes4"}],"type":"error","name":"FallbackInstalled"},{"inputs":[{"internalType":"address","name":"currentHook","type":"address"}],"type":"error","name":"HookAlreadyInstalled"},{"inputs":[{"internalType":"CallType","name":"callType","type":"bytes1"}],"type":"error","name":"InvalidCallType"},{"inputs":[{"internalType":"bytes4","name":"msgSig","type":"bytes4"}],"type":"error","name":"InvalidFallbackHandler"},{"inputs":[],"type":"error","name":"InvalidHookType"},{"inputs":[],"type":"error","name":"InvalidInput"},{"inputs":[{"internalType":"address","name":"module","type":"address"}],"type":"error","name":"InvalidModule"},{"inputs":[{"internalType":"address","name":"module","type":"address"},{"internalType":"uint256","name":"moduleType","type":"uint256"}],"type":"error","name":"InvalidModuleType"},{"inputs":[],"type":"error","name":"InvalidNonce"},{"inputs":[{"internalType":"address","name":"module","type":"address"},{"internalType":"uint256","name":"moduleType","type":"uint256"}],"type":"error","name":"ModuleNotInstalled"},{"inputs":[{"internalType":"bytes4","name":"msgSig","type":"bytes4"}],"type":"error","name":"NoFallbackHandler"},{"inputs":[{"internalType":"address","name":"currentHook","type":"address"},{"internalType":"uint256","name":"moduleType","type":"uint256"}],"type":"error","name":"PreValidationHookAlreadyInstalled"},{"inputs":[{"internalType":"CallType","name":"callType","type":"bytes1"}],"type":"error","name":"UnsupportedCallType"},{"inputs":[{"internalType":"ExecType","name":"execType","type":"bytes1"}],"type":"error","name":"UnsupportedExecType"},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"type":"error","name":"UnsupportedModuleType"},{"inputs":[{"internalType":"address","name":"smartAccount","type":"address","indexed":true},{"internalType":"contract IERC7484","name":"registry","type":"address","indexed":true}],"type":"event","name":"ERC7484RegistryConfigured","anonymous":false},{"inputs":[{"internalType":"address","name":"hook","type":"address","indexed":false},{"internalType":"uint256","name":"time","type":"uint256","indexed":false}],"type":"event","name":"EmergencyHookUninstallRequest","anonymous":false},{"inputs":[{"internalType":"address","name":"hook","type":"address","indexed":false},{"internalType":"uint256","name":"time","type":"uint256","indexed":false}],"type":"event","name":"EmergencyHookUninstallRequestReset","anonymous":false},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256","indexed":false},{"internalType":"address","name":"module","type":"address","indexed":false}],"type":"event","name":"ModuleInstalled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256","indexed":false},{"internalType":"address","name":"module","type":"address","indexed":false}],"type":"event","name":"ModuleUninstalled","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"accountId","outputs":[{"internalType":"string","name":"accountImplementationId","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct EmergencyUninstall","name":"data","type":"tuple","components":[{"internalType":"address","name":"hook","type":"address"},{"internalType":"uint256","name":"hookType","type":"uint256"},{"internalType":"bytes","name":"deInitData","type":"bytes"},{"internalType":"uint256","name":"nonce","type":"uint256"}]},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"emergencyUninstallHook"},{"inputs":[{"internalType":"ModeCode","name":"mode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"execute"},{"inputs":[{"internalType":"ModeCode","name":"mode","type":"bytes32"},{"internalType":"bytes","name":"executionCalldata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"executeFromExecutor","outputs":[{"internalType":"bytes[]","name":"returnDatas","type":"bytes[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getActiveHook","outputs":[{"internalType":"address","name":"hook","type":"address"}]},{"inputs":[{"internalType":"address","name":"cursor","type":"address"},{"internalType":"uint256","name":"size","type":"uint256"}],"stateMutability":"view","type":"function","name":"getExecutorsPaginated","outputs":[{"internalType":"address[]","name":"array","type":"address[]"},{"internalType":"address","name":"next","type":"address"}]},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"view","type":"function","name":"getFallbackHandlerBySelector","outputs":[{"internalType":"CallType","name":"","type":"bytes1"},{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"safe","type":"address"},{"internalType":"address","name":"validator","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"}],"stateMutability":"view","type":"function","name":"getPrevalidationHook","outputs":[{"internalType":"address","name":"hook","type":"address"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"address","name":"entryPoint","type":"address"}],"stateMutability":"view","type":"function","name":"getSafeOp","outputs":[{"internalType":"bytes","name":"operationData","type":"bytes"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"signatures","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"cursor","type":"address"},{"internalType":"uint256","name":"pageSize","type":"uint256"}],"stateMutability":"view","type":"function","name":"getValidatorsPaginated","outputs":[{"internalType":"address[]","name":"array","type":"address[]"},{"internalType":"address","name":"next","type":"address"}]},{"inputs":[{"internalType":"struct ModuleInit[]","name":"modules","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"},{"internalType":"uint256","name":"moduleType","type":"uint256"}]},{"internalType":"struct RegistryInit","name":"registryInit","type":"tuple","components":[{"internalType":"contract IERC7484","name":"registry","type":"address"},{"internalType":"address[]","name":"attesters","type":"address[]"},{"internalType":"uint8","name":"threshold","type":"uint8"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeAccount"},{"inputs":[{"internalType":"struct ModuleInit[]","name":"validators","type":"tuple[]","components":[{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"},{"internalType":"uint256","name":"moduleType","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeAccountWithValidators"},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"installModule"},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"additionalContext","type":"bytes"}],"stateMutability":"view","type":"function","name":"isModuleInstalled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}]},{"inputs":[{"internalType":"contract IERC7484","name":"registry","type":"address"},{"internalType":"address[]","name":"attesters","type":"address[]"},{"internalType":"uint8","name":"threshold","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setRegistry"},{"inputs":[{"internalType":"ModeCode","name":"encodedMode","type":"bytes32"}],"stateMutability":"view","type":"function","name":"supportsExecutionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"stateMutability":"view","type":"function","name":"supportsModule","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleType","type":"uint256"},{"internalType":"address","name":"module","type":"address"},{"internalType":"bytes","name":"deInitData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"uninstallModule"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateUserOp","outputs":[{"internalType":"uint256","name":"packedValidSig","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"accountId()":{"details":"Returns the account id of the smart account","returns":{"accountImplementationId":"the account id of the smart account the accountId should be structured like so:        \"vendorname.accountname.semver\""}},"emergencyUninstallHook((address,uint256,bytes,uint256),bytes)":{"details":"Allows uninstalling hooks without triggering hooks during the uninstall process,      secured by a timelock. Usable on regular hooks and prevalidation hooks","params":{"data":"EmergencyUninstall struct","signature":"signature of the data, to be validated on a validator module or by      safe.checkSignatures if no validator module is supplied/installed"}},"execute(bytes32,bytes)":{"details":"Executes a transaction on behalf of the Safe account.         This function is intended to be called by ERC-4337 EntryPoint.solIf a global hook and/or selector hook is set, it will be calledAccessControl: only Self of Entrypoint can install modules Safe7579 supports the following feature set:    CallTypes:             - CALLTYPE_SINGLE             - CALLTYPE_BATCH             - CALLTYPE_DELEGATECALL    ExecTypes:             - EXECTYPE_DEFAULT (revert if not successful)             - EXECTYPE_TRY    If a different mode is selected, this function will revert","params":{"executionCalldata":"The encoded execution call data","mode":"The encoded execution mode of the transaction. See ModeLib.sol for details"}},"executeFromExecutor(bytes32,bytes)":{"details":"Executes a transaction on behalf of the Safe account.         This function is intended to be called by executor modulesIf a global hook and/or selector hook is set, it will be calledAccessControl: only enabled executor modules Safe7579 supports the following feature set:    CallTypes:             - CALLTYPE_SINGLE             - CALLTYPE_BATCH             - CALLTYPE_DELEGATECALL    ExecTypes:             - EXECTYPE_DEFAULT (revert if not successful)             - EXECTYPE_TRY    If a different mode is selected, this function will revert","params":{"executionCalldata":"The encoded execution call data","mode":"The encoded execution mode of the transaction. See ModeLib.sol for details"}},"getFallbackHandlerBySelector(bytes4)":{"params":{"selector":"the function selector"}},"getNonce(address,address)":{"params":{"safe":"address of safe account","validator":"ERC7579 validator to encode"}},"getPrevalidationHook(uint256)":{"params":{"moduleType":"the prevalidation hook type"}},"initializeAccount((address,bytes,uint256)[],(address,address[],uint8))":{"params":{"modules":"Array of modules to initialize with their respective types","registryInit":"(OPTIONAL) registry, attesters and threshold for IERC7484 Registry                    If not provided, the registry will be set to the zero address, and no                    registry checks will be performed"}},"initializeAccountWithValidators((address,bytes,uint256)[])":{"details":"it will initialize the SentinelList4337 list for validators, and sstore all validatorsSince this function has to be 4337 compliant (storage access), only validator storage is  acccessNote: this function DOES NOT call onInstall() on the validator modules or emit ModuleInstalled events. this has to be done by the launchpad"},"installModule(uint256,address,bytes)":{"details":"The module has to be initialized from msg.sender == SafeProxy, we thus use a    delegatecall to DCUtil, which calls the onInstall/onUninstall function on the ERC7579    module and emits the ModuleInstall/ModuleUnintall eventsAccessControl: only Self of Entrypoint can install modulesIf the safe set a registry, ERC7484 registry will be queried before installingIf a global hook and/or selector hook is set, it will be called","params":{"initData":"arbitrary data that may be required on the module during `onInstall` initialization.","module":"the module address","moduleType":"the module type ID according the ERC-7579 spec                   Note: MULTITYPE_MODULE (uint(0)) is a special type to install a module with                         multiple types"}},"isModuleInstalled(uint256,address,bytes)":{"params":{"additionalContext":"additional context data that the smart account may interpret to                          identifiy conditions under which the module is installed.                          usually this is not necessary, but for some special hooks that                          are stored in mappings, this param might be needed","module":"the module address","moduleType":"the module type ID according the ERC-7579 spec      Note: keep in mind that some contracts can be multiple module types at the same time. It            thus may be necessary to query multiple module types"}},"isValidSignature(bytes32,bytes)":{"params":{"data":"abi.encodePacked(address validationModule, bytes signatures)","hash":"message hash of ERC1271 request"}},"setRegistry(address,address[],uint8)":{"params":{"attesters":"list of attesters","registry":"IERC7484 registry","threshold":"number of attesters required"}},"supportsExecutionMode(bytes32)":{"params":{"encodedMode":"the encoded mode"}},"supportsModule(uint256)":{"params":{"moduleTypeId":"the module type ID according the ERC-7579 spec"}},"uninstallModule(uint256,address,bytes)":{"details":"The module has to be initialized from msg.sender == SafeProxy, we thus use a    delegatecall to DCUtil, which calls the onInstall/onUninstall function on the ERC7579    module and emits the ModuleInstall/ModuleUnintall eventsAccessControl: only Self of Entrypoint can install modulesIf a global hook and/or selector hook is set, it will be called","params":{"deInitData":"arbitrary data that may be required on the module during `onUninstall` de-initialization.","module":"the module address","moduleType":"the module type ID according the ERC-7579 spec"}},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"details":"expects that a ERC7579 validator module is encoded within the UserOp nonce.         if no validator module is provided, it will fallback to validate the transaction with         Safe's signers"}},"version":1},"userdoc":{"kind":"user","methods":{"emergencyUninstallHook((address,uint256,bytes,uint256),bytes)":{"notice":"Emergency uninstall a hook module"},"getActiveHook()":{"notice":"Get the current active global hook"},"getFallbackHandlerBySelector(bytes4)":{"notice":"Get the current active fallback handler and call type for the given selector"},"getNonce(address,address)":{"notice":"Safe7579 is using validator selection encoding in the userop nonce. to make it easier for SDKs / devs to integrate, this function can be called to get the next nonce for a specific validator"},"getPrevalidationHook(uint256)":{"notice":"Get the current active prevalidation hook for the given module type"},"initializeAccount((address,bytes,uint256)[],(address,address[],uint8))":{"notice":"This function can be called by the Launchpad.initSafe7579() or by already existing Safes that want to use Safe7579 if this is called by the Launchpad, it is expected that launchpadValidators() was called previously, and the param validators is empty"},"initializeAccountWithValidators((address,bytes,uint256)[])":{"notice":"This function is intended to be called by Launchpad.validateUserOp()"},"installModule(uint256,address,bytes)":{"notice":"Installs a 7579 Module of a certain type on the smart account"},"isModuleInstalled(uint256,address,bytes)":{"notice":"Function to check if the account has a certain module installed"},"isValidSignature(bytes32,bytes)":{"notice":"Will use Safe's signed messages or checkSignatures features or ERC7579 validation modules if no signature is provided, it makes use of Safe's signedMessages if address(0) or a non-installed validator module is provided, it will use Safe's checkSignatures if a valid validator module is provided, it will use the module's validateUserOp function"},"setRegistry(address,address[],uint8)":{"notice":"Configure the Safe7579 with a IERC7484 registry"},"supportsExecutionMode(bytes32)":{"notice":"Function to check if the account supports a certain CallType or ExecType (see ModeLib.sol)"},"supportsModule(uint256)":{"notice":"Function to check if the account supports installation of a certain module type Id"},"uninstallModule(uint256,address,bytes)":{"notice":"Uninstalls a Module of a certain type on the smart account."},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"ERC4337 v0.7 validation function"}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@gnosis.pm/=node_modules/@gnosis.pm/","@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/src/","@rhinestone/=node_modules/@rhinestone/","@safe-global/=node_modules/@safe-global/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/","erc7579/=node_modules/erc7579/src/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","module-bases/=node_modules/@rhinestone/module-bases/src/","modulekit/=node_modules/@rhinestone/modulekit/src/","sentinellist/=node_modules/@rhinestone/sentinellist/src/","solady/=node_modules/solady/src/","solarray/=node_modules/solarray/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ISafe7579.sol":"ISafe7579"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@ERC4337/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"node_modules/@ERC4337/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"src/DataTypes.sol":{"keccak256":"0x05f3bf9ea35b21e3eb64f55eabc2cf866612768e5295419ebc455ab5d6f45c1b","urls":["bzz-raw://80f75aa39a962bf7003a6b3ab4988b5bbf7660b3715cbcbb9708c0ffe14559ac","dweb:/ipfs/QmPU93JhXVA1ZVXcoznVCKmCZF1hkQXcScC1kw2KuwuFSn"],"license":"GPL-3.0"},"src/ISafe7579.sol":{"keccak256":"0x5e2cbb0da6cf796d59992cf49d0a0ada0eee0309ad35f30a26abf0248b755540","urls":["bzz-raw://c5291913b39810be5c9738e5b8411f220eb041748c2b2b76ca35ccb8d57a9abd","dweb:/ipfs/QmW83X7Uk5XcEvUz8Lq1MGbbuQonkdU3A94MFYHZTjKoMd"],"license":"MIT"},"src/interfaces/IERC7484.sol":{"keccak256":"0xac70106497cbca5b521ad3c27bfa14721aea86bf6f11e331388778f36cf669ff","urls":["bzz-raw://fef31872d4e5d1d589cbadea178651df9991dcf89770fcb5119752c6d6d4bf1c","dweb:/ipfs/QmbYTruqW1PDfnmJCqij4mRixMetCf1P5tc8K67MJtGA6F"],"license":"MIT"},"src/interfaces/IERC7579Account.sol":{"keccak256":"0xc388e47f74f872e342e72d8bd57b428c6910b9e38c50bd3512d9069291dd041d","urls":["bzz-raw://05971661f97add5befb5e89c693add53624bc63166255d1cda9ae4a1c423c47d","dweb:/ipfs/QmVEuEvUadDkPDaGDrFDYh5D4pCvn7JyHhGJThB3UaGJxe"],"license":"MIT"},"src/interfaces/ISafeOp.sol":{"keccak256":"0x1f001973f472988b1f5c502ccb6f8e59f2d920f2bf70728e616747d8d8d761fa","urls":["bzz-raw://74abf8b7be99682d91511aeed0a7d2a09cfe3aa2d72d026e573fc5bf56c479b2","dweb:/ipfs/QmdHWrassTuBH5TVjmcazaG4tUvZJEVSyY1vY8gf6FGXnc"],"license":"MIT"},"src/lib/ModeLib.sol":{"keccak256":"0xa1bafca421213265c5b22f3d3b2858b0a12366f25f9b0d3b53f14cb9d3fe0e3d","urls":["bzz-raw://93bc4c82cbeaf62e2d23c79c4e1403524da0d76fe307a62cc9272414f628a088","dweb:/ipfs/QmZFtaCwMEwPuy6HCUS9JcU2KoT2NpZczLdK7D2vqLUbAH"],"license":"MIT"}},"version":1},"id":104}